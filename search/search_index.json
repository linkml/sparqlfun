{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"sparqlfun schema SPARQL Templates Classes ResultSet Node - The basic unit of representation in an RDF or OWL graph BasicClass BlankNode - A node with an ID that is not preserved between databases IriNode NamedIndividualNode - A node that represents an OWL Named Individual TypedNode ClassNode - A node that represents an RDFS/OWL class OboClass OboClassFiltered TaxonApplicableClass TaxonClass PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties PairwiseCommonAncestor PairwiseCommonSubClassAncestor Prefix - Maps CURIEs to URIs Triple - Represents an RDF triple SubClassCountTriple InTaxonTriple - In ubergraph, an in-taxon triple is pre-inferred InferredNeverInTaxon - We infer via join NeverInTaxonTriple NodeToNodeTriple - A triple where object is a node RdfTypeTriple - A triple that indicates the asserted type of the subject entity RdfsDomainTriple RdfsRangeTriple RdfsSubclassOfTriple RdfsSubclassOfNamedTriple RdfsSubpropertyOfTriple NodeToValueTriple - A triple where object is a literal DefinitionTriple RdfsLabelTriple NormalizedInformationContentTriple Quad - Represents an RDF triple plus named graph RelationGraphQuad NonRedundantQuad - A triple that indicates the asserted type of the subject entity UbergraphQuad IsAOrPartOf UbergraphTaxonClass Mixins GenericResult ClassTrait IndividualTrait NodeTrait - abstract groupings/properties for different aspects of the model ClassTrait IndividualTrait PropertyTrait PropertyTrait TaxonApplicable Slots ancestor base - The base URI a prefix will expand to \u279esubClassOf class_with_constraint datatype definition description direct_taxon exact_synonyms graph - Graph to which the triple belongs relation graph quad\u279egraph - Indicates inference/redundancy status non redundant quad\u279egraph - Source of id - An identifier for an element. Note blank node ids are not unique across databases iri node\u279eid language node1 node2 object - a literal or node representing the object of the triple node to node triple\u279eobject rdf type triple\u279eobject - The entity type rdfs subclass of triple\u279eobject - The superclass element of the triple rdfs subproperty of triple\u279eobject - The superproperty element of the triple node to value triple\u279eobject taxon applicable\u279eobject predicate predicate1 predicate2 prefix - A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' query_has_subclass_ancestor results subject rdfs subclass of triple\u279esubject - The subclass element of the triple rdfs subproperty of triple\u279esubject - The subproperty element of the triple taxon applicable\u279esubject subject_predicate type value - Note the range of this slot is always a string. Only used the triple represents a literal assertion rdfs label triple\u279evalue - The label value Enums UberGraphSourceEnum Subsets BaseTable - Indicates the class/table is typically not constructed from a view Export - Used to indicate a table/class that should be dumped as part of the export of a db Types Built in Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str Defined Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) - IDs are either CURIEs, IRI, or blank nodes. IRIs are wrapped in <>s to distinguish them from CURIEs, but in general it is good practice to populate the [prefixes][Prefixes.md] table such that they are shortened to CURIEs. Blank nodes are ids starting with _: . Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Index"},{"location":"#sparqlfun-schema","text":"SPARQL Templates","title":"sparqlfun schema"},{"location":"#classes","text":"ResultSet Node - The basic unit of representation in an RDF or OWL graph BasicClass BlankNode - A node with an ID that is not preserved between databases IriNode NamedIndividualNode - A node that represents an OWL Named Individual TypedNode ClassNode - A node that represents an RDFS/OWL class OboClass OboClassFiltered TaxonApplicableClass TaxonClass PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties PairwiseCommonAncestor PairwiseCommonSubClassAncestor Prefix - Maps CURIEs to URIs Triple - Represents an RDF triple SubClassCountTriple InTaxonTriple - In ubergraph, an in-taxon triple is pre-inferred InferredNeverInTaxon - We infer via join NeverInTaxonTriple NodeToNodeTriple - A triple where object is a node RdfTypeTriple - A triple that indicates the asserted type of the subject entity RdfsDomainTriple RdfsRangeTriple RdfsSubclassOfTriple RdfsSubclassOfNamedTriple RdfsSubpropertyOfTriple NodeToValueTriple - A triple where object is a literal DefinitionTriple RdfsLabelTriple NormalizedInformationContentTriple Quad - Represents an RDF triple plus named graph RelationGraphQuad NonRedundantQuad - A triple that indicates the asserted type of the subject entity UbergraphQuad IsAOrPartOf UbergraphTaxonClass","title":"Classes"},{"location":"#mixins","text":"GenericResult ClassTrait IndividualTrait NodeTrait - abstract groupings/properties for different aspects of the model ClassTrait IndividualTrait PropertyTrait PropertyTrait TaxonApplicable","title":"Mixins"},{"location":"#slots","text":"ancestor base - The base URI a prefix will expand to \u279esubClassOf class_with_constraint datatype definition description direct_taxon exact_synonyms graph - Graph to which the triple belongs relation graph quad\u279egraph - Indicates inference/redundancy status non redundant quad\u279egraph - Source of id - An identifier for an element. Note blank node ids are not unique across databases iri node\u279eid language node1 node2 object - a literal or node representing the object of the triple node to node triple\u279eobject rdf type triple\u279eobject - The entity type rdfs subclass of triple\u279eobject - The superclass element of the triple rdfs subproperty of triple\u279eobject - The superproperty element of the triple node to value triple\u279eobject taxon applicable\u279eobject predicate predicate1 predicate2 prefix - A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' query_has_subclass_ancestor results subject rdfs subclass of triple\u279esubject - The subclass element of the triple rdfs subproperty of triple\u279esubject - The subproperty element of the triple taxon applicable\u279esubject subject_predicate type value - Note the range of this slot is always a string. Only used the triple represents a literal assertion rdfs label triple\u279evalue - The label value","title":"Slots"},{"location":"#enums","text":"UberGraphSourceEnum","title":"Enums"},{"location":"#subsets","text":"BaseTable - Indicates the class/table is typically not constructed from a view Export - Used to indicate a table/class that should be dumped as part of the export of a db","title":"Subsets"},{"location":"#types","text":"","title":"Types"},{"location":"#built-in","text":"Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str","title":"Built in"},{"location":"#defined","text":"Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) - IDs are either CURIEs, IRI, or blank nodes. IRIs are wrapped in <>s to distinguish them from CURIEs, but in general it is good practice to populate the [prefixes][Prefixes.md] table such that they are shortened to CURIEs. Blank nodes are ids starting with _: . Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Defined"},{"location":"BaseTable/","text":"Subset: base table Indicates the class/table is typically not constructed from a view URI: sparqlfun:base_table Classes Prefix - Maps CURIEs to URIs Quad - Represents an RDF triple plus named graph Triple - Represents an RDF triple Mixins Slots Types Enums","title":"Subset: base table"},{"location":"BaseTable/#subset-base-table","text":"Indicates the class/table is typically not constructed from a view URI: sparqlfun:base_table","title":"Subset: base table"},{"location":"BaseTable/#classes","text":"Prefix - Maps CURIEs to URIs Quad - Represents an RDF triple plus named graph Triple - Represents an RDF triple","title":"Classes"},{"location":"BaseTable/#mixins","text":"","title":"Mixins"},{"location":"BaseTable/#slots","text":"","title":"Slots"},{"location":"BaseTable/#types","text":"","title":"Types"},{"location":"BaseTable/#enums","text":"","title":"Enums"},{"location":"BasicClass/","text":"Class: basic class URI: sparqlfun:BasicClass Parents is_a: Node - The basic unit of representation in an RDF or OWL graph Attributes Own \u279esubClassOf 0..* Range: ClassNode Inherited from node: id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType Other properties Mappings: owl:Class","title":"Class: basic class"},{"location":"BasicClass/#class-basic-class","text":"URI: sparqlfun:BasicClass","title":"Class: basic class"},{"location":"BasicClass/#parents","text":"is_a: Node - The basic unit of representation in an RDF or OWL graph","title":"Parents"},{"location":"BasicClass/#attributes","text":"","title":"Attributes"},{"location":"BasicClass/#own","text":"\u279esubClassOf 0..* Range: ClassNode","title":"Own"},{"location":"BasicClass/#inherited-from-node","text":"id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType","title":"Inherited from node:"},{"location":"BasicClass/#other-properties","text":"Mappings: owl:Class","title":"Other properties"},{"location":"BlankNode/","text":"Class: blank node A node with an ID that is not preserved between databases URI: sparqlfun:BlankNode Parents is_a: Node - The basic unit of representation in an RDF or OWL graph Attributes Inherited from node: id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType","title":"Class: blank node"},{"location":"BlankNode/#class-blank-node","text":"A node with an ID that is not preserved between databases URI: sparqlfun:BlankNode","title":"Class: blank node"},{"location":"BlankNode/#parents","text":"is_a: Node - The basic unit of representation in an RDF or OWL graph","title":"Parents"},{"location":"BlankNode/#attributes","text":"","title":"Attributes"},{"location":"BlankNode/#inherited-from-node","text":"id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType","title":"Inherited from node:"},{"location":"ClassNode/","text":"Class: class node A node that represents an RDFS/OWL class URI: sparqlfun:ClassNode Parents is_a: TypedNode Uses Mixin mixin: ClassTrait Children OboClass OboClassFiltered TaxonApplicableClass TaxonClass Referenced by Class None \u279esubClassOf 0..* ClassNode NonRedundantQuad non redundant quad\u279egraph 0..1 ClassNode RdfTypeTriple rdf type triple\u279eobject 0..1 ClassNode RdfsSubclassOfTriple rdfs subclass of triple\u279eobject 0..1 ClassNode RdfsSubclassOfTriple rdfs subclass of triple\u279esubject 0..1 ClassNode Attributes Inherited from typed node: id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType type 0..1 Range: Node Other properties Mappings: owl:Class","title":"Class: class node"},{"location":"ClassNode/#class-class-node","text":"A node that represents an RDFS/OWL class URI: sparqlfun:ClassNode","title":"Class: class node"},{"location":"ClassNode/#parents","text":"is_a: TypedNode","title":"Parents"},{"location":"ClassNode/#uses-mixin","text":"mixin: ClassTrait","title":"Uses Mixin"},{"location":"ClassNode/#children","text":"OboClass OboClassFiltered TaxonApplicableClass TaxonClass","title":"Children"},{"location":"ClassNode/#referenced-by-class","text":"None \u279esubClassOf 0..* ClassNode NonRedundantQuad non redundant quad\u279egraph 0..1 ClassNode RdfTypeTriple rdf type triple\u279eobject 0..1 ClassNode RdfsSubclassOfTriple rdfs subclass of triple\u279eobject 0..1 ClassNode RdfsSubclassOfTriple rdfs subclass of triple\u279esubject 0..1 ClassNode","title":"Referenced by Class"},{"location":"ClassNode/#attributes","text":"","title":"Attributes"},{"location":"ClassNode/#inherited-from-typed-node","text":"id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType type 0..1 Range: Node","title":"Inherited from typed node:"},{"location":"ClassNode/#other-properties","text":"Mappings: owl:Class","title":"Other properties"},{"location":"ClassTrait/","text":"Class: class trait URI: sparqlfun:ClassTrait Parents is_a: NodeTrait - abstract groupings/properties for different aspects of the model Mixin for ClassNode (mixin) - A node that represents an RDFS/OWL class Referenced by Class Attributes","title":"Class: class trait"},{"location":"ClassTrait/#class-class-trait","text":"URI: sparqlfun:ClassTrait","title":"Class: class trait"},{"location":"ClassTrait/#parents","text":"is_a: NodeTrait - abstract groupings/properties for different aspects of the model","title":"Parents"},{"location":"ClassTrait/#mixin-for","text":"ClassNode (mixin) - A node that represents an RDFS/OWL class","title":"Mixin for"},{"location":"ClassTrait/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"ClassTrait/#attributes","text":"","title":"Attributes"},{"location":"CountOfInstantiatedClasses/","text":"Class: count of instantiated classes Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated URI: sparqlfun:CountOfInstantiatedClasses Parents is_a: RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element Attributes Inherited from rdf level summary statistic: \u279eelement 0..1 Range: Node \u279ecount_value 0..1 Range: Integer Other properties Comments: sqlview>> SELECT object AS element, count(*) AS count_value FROM rdf_type_statement GROUP BY element ORDER BY count_value DESC","title":"Class: count of instantiated classes"},{"location":"CountOfInstantiatedClasses/#class-count-of-instantiated-classes","text":"Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated URI: sparqlfun:CountOfInstantiatedClasses","title":"Class: count of instantiated classes"},{"location":"CountOfInstantiatedClasses/#parents","text":"is_a: RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element","title":"Parents"},{"location":"CountOfInstantiatedClasses/#attributes","text":"","title":"Attributes"},{"location":"CountOfInstantiatedClasses/#inherited-from-rdf-level-summary-statistic","text":"\u279eelement 0..1 Range: Node \u279ecount_value 0..1 Range: Integer","title":"Inherited from rdf level summary statistic:"},{"location":"CountOfInstantiatedClasses/#other-properties","text":"Comments: sqlview>> SELECT object AS element, count(*) AS count_value FROM rdf_type_statement GROUP BY element ORDER BY count_value DESC","title":"Other properties"},{"location":"CountOfPredicates/","text":"Class: count of predicates Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL URI: sparqlfun:CountOfPredicates Parents is_a: RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element Attributes Inherited from rdf level summary statistic: \u279eelement 0..1 Range: Node \u279ecount_value 0..1 Range: Integer Other properties Comments: sqlview>> SELECT predicate AS element, count(*) AS count_value FROM triples GROUP BY predicate ORDER BY count_value DESC","title":"Class: count of predicates"},{"location":"CountOfPredicates/#class-count-of-predicates","text":"Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL URI: sparqlfun:CountOfPredicates","title":"Class: count of predicates"},{"location":"CountOfPredicates/#parents","text":"is_a: RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element","title":"Parents"},{"location":"CountOfPredicates/#attributes","text":"","title":"Attributes"},{"location":"CountOfPredicates/#inherited-from-rdf-level-summary-statistic","text":"\u279eelement 0..1 Range: Node \u279ecount_value 0..1 Range: Integer","title":"Inherited from rdf level summary statistic:"},{"location":"CountOfPredicates/#other-properties","text":"Comments: sqlview>> SELECT predicate AS element, count(*) AS count_value FROM triples GROUP BY predicate ORDER BY count_value DESC","title":"Other properties"},{"location":"CountOfSubclasses/","text":"Class: count of subclasses Number of subclasses for a given class URI: sparqlfun:CountOfSubclasses Parents is_a: RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element Attributes Inherited from rdf level summary statistic: \u279eelement 0..1 Range: Node \u279ecount_value 0..1 Range: Integer Other properties Comments: sqlview>> SELECT sc.object AS element, count(distinct sc.subject) AS count_value FROM rdfs_subclass_of_statement AS sc GROUP BY sc.object ORDER BY count_value DESC","title":"Class: count of subclasses"},{"location":"CountOfSubclasses/#class-count-of-subclasses","text":"Number of subclasses for a given class URI: sparqlfun:CountOfSubclasses","title":"Class: count of subclasses"},{"location":"CountOfSubclasses/#parents","text":"is_a: RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element","title":"Parents"},{"location":"CountOfSubclasses/#attributes","text":"","title":"Attributes"},{"location":"CountOfSubclasses/#inherited-from-rdf-level-summary-statistic","text":"\u279eelement 0..1 Range: Node \u279ecount_value 0..1 Range: Integer","title":"Inherited from rdf level summary statistic:"},{"location":"CountOfSubclasses/#other-properties","text":"Comments: sqlview>> SELECT sc.object AS element, count(distinct sc.subject) AS count_value FROM rdfs_subclass_of_statement AS sc GROUP BY sc.object ORDER BY count_value DESC","title":"Other properties"},{"location":"DefinitionTriple/","text":"Class: definition triple URI: sparqlfun:DefinitionTriple Parents is_a: NodeToValueTriple - A triple where object is a literal Attributes Inherited from node to value triple: subject 0..1 Range: Node predicate 0..1 Range: PropertyNode node to value triple\u279eobject 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Class: definition triple"},{"location":"DefinitionTriple/#class-definition-triple","text":"URI: sparqlfun:DefinitionTriple","title":"Class: definition triple"},{"location":"DefinitionTriple/#parents","text":"is_a: NodeToValueTriple - A triple where object is a literal","title":"Parents"},{"location":"DefinitionTriple/#attributes","text":"","title":"Attributes"},{"location":"DefinitionTriple/#inherited-from-node-to-value-triple","text":"subject 0..1 Range: Node predicate 0..1 Range: PropertyNode node to value triple\u279eobject 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Inherited from node to value triple:"},{"location":"Export/","text":"Subset: export Used to indicate a table/class that should be dumped as part of the export of a db URI: sparqlfun:export Classes Prefix - Maps CURIEs to URIs Mixins Slots Types Enums","title":"Subset: export"},{"location":"Export/#subset-export","text":"Used to indicate a table/class that should be dumped as part of the export of a db URI: sparqlfun:export","title":"Subset: export"},{"location":"Export/#classes","text":"Prefix - Maps CURIEs to URIs","title":"Classes"},{"location":"Export/#mixins","text":"","title":"Mixins"},{"location":"Export/#slots","text":"","title":"Slots"},{"location":"Export/#types","text":"","title":"Types"},{"location":"Export/#enums","text":"","title":"Enums"},{"location":"GenericResult/","text":"Class: GenericResult URI: sparqlfun:GenericResult Referenced by Class None results 0..* GenericResult Attributes","title":"Class: GenericResult"},{"location":"GenericResult/#class-genericresult","text":"URI: sparqlfun:GenericResult","title":"Class: GenericResult"},{"location":"GenericResult/#referenced-by-class","text":"None results 0..* GenericResult","title":"Referenced by Class"},{"location":"GenericResult/#attributes","text":"","title":"Attributes"},{"location":"InTaxonTriple/","text":"Class: in taxon triple In ubergraph, an in-taxon triple is pre-inferred URI: sparqlfun:InTaxonTriple Parents is_a: Triple - Represents an RDF triple Uses Mixin mixin: TaxonApplicable Attributes Inherited from triple: subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Class: in taxon triple"},{"location":"InTaxonTriple/#class-in-taxon-triple","text":"In ubergraph, an in-taxon triple is pre-inferred URI: sparqlfun:InTaxonTriple","title":"Class: in taxon triple"},{"location":"InTaxonTriple/#parents","text":"is_a: Triple - Represents an RDF triple","title":"Parents"},{"location":"InTaxonTriple/#uses-mixin","text":"mixin: TaxonApplicable","title":"Uses Mixin"},{"location":"InTaxonTriple/#attributes","text":"","title":"Attributes"},{"location":"InTaxonTriple/#inherited-from-triple","text":"subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Inherited from triple:"},{"location":"IndividualTrait/","text":"Class: individual trait URI: sparqlfun:IndividualTrait Parents is_a: NodeTrait - abstract groupings/properties for different aspects of the model Attributes","title":"Class: individual trait"},{"location":"IndividualTrait/#class-individual-trait","text":"URI: sparqlfun:IndividualTrait","title":"Class: individual trait"},{"location":"IndividualTrait/#parents","text":"is_a: NodeTrait - abstract groupings/properties for different aspects of the model","title":"Parents"},{"location":"IndividualTrait/#attributes","text":"","title":"Attributes"},{"location":"InferredNeverInTaxon/","text":"Class: inferred never in taxon We infer via join URI: sparqlfun:InferredNeverInTaxon Parents is_a: Triple - Represents an RDF triple Uses Mixin mixin: TaxonApplicable Attributes Own subject_predicate 0..1 Range: String class_with_constraint 0..1 Range: String direct_taxon 0..1 Range: String Inherited from triple: subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Class: inferred never in taxon"},{"location":"InferredNeverInTaxon/#class-inferred-never-in-taxon","text":"We infer via join URI: sparqlfun:InferredNeverInTaxon","title":"Class: inferred never in taxon"},{"location":"InferredNeverInTaxon/#parents","text":"is_a: Triple - Represents an RDF triple","title":"Parents"},{"location":"InferredNeverInTaxon/#uses-mixin","text":"mixin: TaxonApplicable","title":"Uses Mixin"},{"location":"InferredNeverInTaxon/#attributes","text":"","title":"Attributes"},{"location":"InferredNeverInTaxon/#own","text":"subject_predicate 0..1 Range: String class_with_constraint 0..1 Range: String direct_taxon 0..1 Range: String","title":"Own"},{"location":"InferredNeverInTaxon/#inherited-from-triple","text":"subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Inherited from triple:"},{"location":"IriNode/","text":"Class: iri node URI: sparqlfun:IriNode Parents is_a: Node - The basic unit of representation in an RDF or OWL graph Referenced by Class Attributes Own iri node\u279eid 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType Other properties Aliases: IRI named entity","title":"Class: iri node"},{"location":"IriNode/#class-iri-node","text":"URI: sparqlfun:IriNode","title":"Class: iri node"},{"location":"IriNode/#parents","text":"is_a: Node - The basic unit of representation in an RDF or OWL graph","title":"Parents"},{"location":"IriNode/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"IriNode/#attributes","text":"","title":"Attributes"},{"location":"IriNode/#own","text":"iri node\u279eid 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType","title":"Own"},{"location":"IriNode/#other-properties","text":"Aliases: IRI named entity","title":"Other properties"},{"location":"IsAOrPartOf/","text":"Class: is a or part of URI: sparqlfun:IsAOrPartOf Parents is_a: UbergraphQuad Attributes Inherited from ubergraph quad: subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String relation graph quad\u279egraph 0..1 Description: Indicates inference/redundancy status Range: Node","title":"Class: is a or part of"},{"location":"IsAOrPartOf/#class-is-a-or-part-of","text":"URI: sparqlfun:IsAOrPartOf","title":"Class: is a or part of"},{"location":"IsAOrPartOf/#parents","text":"is_a: UbergraphQuad","title":"Parents"},{"location":"IsAOrPartOf/#attributes","text":"","title":"Attributes"},{"location":"IsAOrPartOf/#inherited-from-ubergraph-quad","text":"subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String relation graph quad\u279egraph 0..1 Description: Indicates inference/redundancy status Range: Node","title":"Inherited from ubergraph quad:"},{"location":"IsReport/","text":"Class: is report Used to describe classes/views that have a reporting function URI: sparqlfun:IsReport Mixin for RdfLevelSummaryStatistic (mixin) - Abstract grouping for views/classes that provide some kind of count summary about an individual element Referenced by Class Attributes","title":"Class: is report"},{"location":"IsReport/#class-is-report","text":"Used to describe classes/views that have a reporting function URI: sparqlfun:IsReport","title":"Class: is report"},{"location":"IsReport/#mixin-for","text":"RdfLevelSummaryStatistic (mixin) - Abstract grouping for views/classes that provide some kind of count summary about an individual element","title":"Mixin for"},{"location":"IsReport/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"IsReport/#attributes","text":"","title":"Attributes"},{"location":"NamedIndividualNode/","text":"Class: named individual node A node that represents an OWL Named Individual URI: sparqlfun:NamedIndividualNode Parents is_a: Node - The basic unit of representation in an RDF or OWL graph Attributes Inherited from node: id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType Other properties Mappings: owl:NamedIndividual","title":"Class: named individual node"},{"location":"NamedIndividualNode/#class-named-individual-node","text":"A node that represents an OWL Named Individual URI: sparqlfun:NamedIndividualNode","title":"Class: named individual node"},{"location":"NamedIndividualNode/#parents","text":"is_a: Node - The basic unit of representation in an RDF or OWL graph","title":"Parents"},{"location":"NamedIndividualNode/#attributes","text":"","title":"Attributes"},{"location":"NamedIndividualNode/#inherited-from-node","text":"id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType","title":"Inherited from node:"},{"location":"NamedIndividualNode/#other-properties","text":"Mappings: owl:NamedIndividual","title":"Other properties"},{"location":"NeverInTaxonTriple/","text":"Class: never in taxon triple URI: sparqlfun:NeverInTaxonTriple Parents is_a: Triple - Represents an RDF triple Uses Mixin mixin: TaxonApplicable Attributes Inherited from triple: subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Class: never in taxon triple"},{"location":"NeverInTaxonTriple/#class-never-in-taxon-triple","text":"URI: sparqlfun:NeverInTaxonTriple","title":"Class: never in taxon triple"},{"location":"NeverInTaxonTriple/#parents","text":"is_a: Triple - Represents an RDF triple","title":"Parents"},{"location":"NeverInTaxonTriple/#uses-mixin","text":"mixin: TaxonApplicable","title":"Uses Mixin"},{"location":"NeverInTaxonTriple/#attributes","text":"","title":"Attributes"},{"location":"NeverInTaxonTriple/#inherited-from-triple","text":"subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Inherited from triple:"},{"location":"Node/","text":"Class: node The basic unit of representation in an RDF or OWL graph URI: sparqlfun:Node Children BasicClass BlankNode - A node with an ID that is not preserved between databases IriNode NamedIndividualNode - A node that represents an OWL Named Individual TypedNode Referenced by Class None graph 0..1 Node NodeToNodeTriple node to node triple\u279eobject 0..1 Node RelationGraphQuad relation graph quad\u279egraph 0..1 Node None subject 0..1 Node None type 0..1 Node Attributes Own id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType Other properties Aliases: object resource Exact Mappings: rdf:Resource","title":"Class: node"},{"location":"Node/#class-node","text":"The basic unit of representation in an RDF or OWL graph URI: sparqlfun:Node","title":"Class: node"},{"location":"Node/#children","text":"BasicClass BlankNode - A node with an ID that is not preserved between databases IriNode NamedIndividualNode - A node that represents an OWL Named Individual TypedNode","title":"Children"},{"location":"Node/#referenced-by-class","text":"None graph 0..1 Node NodeToNodeTriple node to node triple\u279eobject 0..1 Node RelationGraphQuad relation graph quad\u279egraph 0..1 Node None subject 0..1 Node None type 0..1 Node","title":"Referenced by Class"},{"location":"Node/#attributes","text":"","title":"Attributes"},{"location":"Node/#own","text":"id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType","title":"Own"},{"location":"Node/#other-properties","text":"Aliases: object resource Exact Mappings: rdf:Resource","title":"Other properties"},{"location":"NodeToNodeTriple/","text":"Class: node to node triple A triple where object is a node URI: sparqlfun:NodeToNodeTriple Parents is_a: Triple - Represents an RDF triple Children RdfTypeTriple - A triple that indicates the asserted type of the subject entity RdfsDomainTriple RdfsRangeTriple RdfsSubclassOfTriple RdfsSubpropertyOfTriple Referenced by Class Attributes Own node to node triple\u279eobject 0..1 Description: a literal or node representing the object of the triple Range: Node Inherited from triple: subject 0..1 Range: Node predicate 0..1 Range: PropertyNode","title":"Class: node to node triple"},{"location":"NodeToNodeTriple/#class-node-to-node-triple","text":"A triple where object is a node URI: sparqlfun:NodeToNodeTriple","title":"Class: node to node triple"},{"location":"NodeToNodeTriple/#parents","text":"is_a: Triple - Represents an RDF triple","title":"Parents"},{"location":"NodeToNodeTriple/#children","text":"RdfTypeTriple - A triple that indicates the asserted type of the subject entity RdfsDomainTriple RdfsRangeTriple RdfsSubclassOfTriple RdfsSubpropertyOfTriple","title":"Children"},{"location":"NodeToNodeTriple/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"NodeToNodeTriple/#attributes","text":"","title":"Attributes"},{"location":"NodeToNodeTriple/#own","text":"node to node triple\u279eobject 0..1 Description: a literal or node representing the object of the triple Range: Node","title":"Own"},{"location":"NodeToNodeTriple/#inherited-from-triple","text":"subject 0..1 Range: Node predicate 0..1 Range: PropertyNode","title":"Inherited from triple:"},{"location":"NodeToValueTriple/","text":"Class: node to value triple A triple where object is a literal URI: sparqlfun:NodeToValueTriple Parents is_a: Triple - Represents an RDF triple Children DefinitionTriple RdfsLabelTriple Referenced by Class Attributes Own node to value triple\u279eobject 0..1 Description: a literal or node representing the object of the triple Range: String Inherited from triple: subject 0..1 Range: Node predicate 0..1 Range: PropertyNode","title":"Class: node to value triple"},{"location":"NodeToValueTriple/#class-node-to-value-triple","text":"A triple where object is a literal URI: sparqlfun:NodeToValueTriple","title":"Class: node to value triple"},{"location":"NodeToValueTriple/#parents","text":"is_a: Triple - Represents an RDF triple","title":"Parents"},{"location":"NodeToValueTriple/#children","text":"DefinitionTriple RdfsLabelTriple","title":"Children"},{"location":"NodeToValueTriple/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"NodeToValueTriple/#attributes","text":"","title":"Attributes"},{"location":"NodeToValueTriple/#own","text":"node to value triple\u279eobject 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Own"},{"location":"NodeToValueTriple/#inherited-from-triple","text":"subject 0..1 Range: Node predicate 0..1 Range: PropertyNode","title":"Inherited from triple:"},{"location":"NodeTrait/","text":"Class: node trait abstract groupings/properties for different aspects of the model URI: sparqlfun:NodeTrait Children ClassTrait IndividualTrait PropertyTrait Referenced by Class Attributes","title":"Class: node trait"},{"location":"NodeTrait/#class-node-trait","text":"abstract groupings/properties for different aspects of the model URI: sparqlfun:NodeTrait","title":"Class: node trait"},{"location":"NodeTrait/#children","text":"ClassTrait IndividualTrait PropertyTrait","title":"Children"},{"location":"NodeTrait/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"NodeTrait/#attributes","text":"","title":"Attributes"},{"location":"NonRedundantQuad/","text":"Class: non redundant quad A triple that indicates the asserted type of the subject entity URI: sparqlfun:NonRedundantQuad Parents is_a: RelationGraphQuad Referenced by Class Attributes Own non redundant quad\u279egraph 0..1 Description: Source of Range: ClassNode Inherited from relation graph quad: subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Class: non redundant quad"},{"location":"NonRedundantQuad/#class-non-redundant-quad","text":"A triple that indicates the asserted type of the subject entity URI: sparqlfun:NonRedundantQuad","title":"Class: non redundant quad"},{"location":"NonRedundantQuad/#parents","text":"is_a: RelationGraphQuad","title":"Parents"},{"location":"NonRedundantQuad/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"NonRedundantQuad/#attributes","text":"","title":"Attributes"},{"location":"NonRedundantQuad/#own","text":"non redundant quad\u279egraph 0..1 Description: Source of Range: ClassNode","title":"Own"},{"location":"NonRedundantQuad/#inherited-from-relation-graph-quad","text":"subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Inherited from relation graph quad:"},{"location":"NormalizedInformationContentTriple/","text":"Class: normalized information content triple URI: sparqlfun:NormalizedInformationContentTriple Parents is_a: Triple - Represents an RDF triple Attributes Inherited from triple: subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Class: normalized information content triple"},{"location":"NormalizedInformationContentTriple/#class-normalized-information-content-triple","text":"URI: sparqlfun:NormalizedInformationContentTriple","title":"Class: normalized information content triple"},{"location":"NormalizedInformationContentTriple/#parents","text":"is_a: Triple - Represents an RDF triple","title":"Parents"},{"location":"NormalizedInformationContentTriple/#attributes","text":"","title":"Attributes"},{"location":"NormalizedInformationContentTriple/#inherited-from-triple","text":"subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Inherited from triple:"},{"location":"OboClass/","text":"Class: obo class URI: sparqlfun:OboClass Parents is_a: ClassNode - A node that represents an RDFS/OWL class Attributes Own definition 0..1 Range: String exact_synonyms 0..* Range: String Inherited from class node: id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType type 0..1 Range: Node Other properties Mappings: owl:Class","title":"Class: obo class"},{"location":"OboClass/#class-obo-class","text":"URI: sparqlfun:OboClass","title":"Class: obo class"},{"location":"OboClass/#parents","text":"is_a: ClassNode - A node that represents an RDFS/OWL class","title":"Parents"},{"location":"OboClass/#attributes","text":"","title":"Attributes"},{"location":"OboClass/#own","text":"definition 0..1 Range: String exact_synonyms 0..* Range: String","title":"Own"},{"location":"OboClass/#inherited-from-class-node","text":"id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType type 0..1 Range: Node","title":"Inherited from class node:"},{"location":"OboClass/#other-properties","text":"Mappings: owl:Class","title":"Other properties"},{"location":"OboClassFiltered/","text":"Class: obo class filtered URI: sparqlfun:OboClassFiltered Parents is_a: ClassNode - A node that represents an RDFS/OWL class Attributes Own definition 0..1 Range: String exact_synonyms 0..* Range: String Inherited from class node: id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType type 0..1 Range: Node Other properties Mappings: owl:Class","title":"Class: obo class filtered"},{"location":"OboClassFiltered/#class-obo-class-filtered","text":"URI: sparqlfun:OboClassFiltered","title":"Class: obo class filtered"},{"location":"OboClassFiltered/#parents","text":"is_a: ClassNode - A node that represents an RDFS/OWL class","title":"Parents"},{"location":"OboClassFiltered/#attributes","text":"","title":"Attributes"},{"location":"OboClassFiltered/#own","text":"definition 0..1 Range: String exact_synonyms 0..* Range: String","title":"Own"},{"location":"OboClassFiltered/#inherited-from-class-node","text":"id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType type 0..1 Range: Node","title":"Inherited from class node:"},{"location":"OboClassFiltered/#other-properties","text":"Mappings: owl:Class","title":"Other properties"},{"location":"PairwiseCommonAncestor/","text":"Class: pairwise common ancestor URI: sparqlfun:PairwiseCommonAncestor Children PairwiseCommonSubClassAncestor Referenced by Class Attributes Own node1 0..1 Range: String node2 0..1 Range: String predicate1 0..1 Range: PropertyNode predicate2 0..1 Range: PropertyNode ancestor 0..1 Range: String","title":"Class: pairwise common ancestor"},{"location":"PairwiseCommonAncestor/#class-pairwise-common-ancestor","text":"URI: sparqlfun:PairwiseCommonAncestor","title":"Class: pairwise common ancestor"},{"location":"PairwiseCommonAncestor/#children","text":"PairwiseCommonSubClassAncestor","title":"Children"},{"location":"PairwiseCommonAncestor/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"PairwiseCommonAncestor/#attributes","text":"","title":"Attributes"},{"location":"PairwiseCommonAncestor/#own","text":"node1 0..1 Range: String node2 0..1 Range: String predicate1 0..1 Range: PropertyNode predicate2 0..1 Range: PropertyNode ancestor 0..1 Range: String","title":"Own"},{"location":"PairwiseCommonSubClassAncestor/","text":"Class: pairwise common SubClass ancestor URI: sparqlfun:PairwiseCommonSubClassAncestor Parents is_a: PairwiseCommonAncestor Attributes Inherited from pairwise common ancestor: node1 0..1 Range: String node2 0..1 Range: String predicate1 0..1 Range: PropertyNode predicate2 0..1 Range: PropertyNode ancestor 0..1 Range: String","title":"Class: pairwise common SubClass ancestor"},{"location":"PairwiseCommonSubClassAncestor/#class-pairwise-common-subclass-ancestor","text":"URI: sparqlfun:PairwiseCommonSubClassAncestor","title":"Class: pairwise common SubClass ancestor"},{"location":"PairwiseCommonSubClassAncestor/#parents","text":"is_a: PairwiseCommonAncestor","title":"Parents"},{"location":"PairwiseCommonSubClassAncestor/#attributes","text":"","title":"Attributes"},{"location":"PairwiseCommonSubClassAncestor/#inherited-from-pairwise-common-ancestor","text":"node1 0..1 Range: String node2 0..1 Range: String predicate1 0..1 Range: PropertyNode predicate2 0..1 Range: PropertyNode ancestor 0..1 Range: String","title":"Inherited from pairwise common ancestor:"},{"location":"PropertyNode/","text":"Class: property node Note this only directly classifies nodes asserted to be rdf:Properties URI: sparqlfun:PropertyNode Parents is_a: TypedNode Referenced by Class None predicate 0..1 PropertyNode None predicate1 0..1 PropertyNode None predicate2 0..1 PropertyNode RdfsSubpropertyOfTriple rdfs subproperty of triple\u279eobject 0..1 PropertyNode RdfsSubpropertyOfTriple rdfs subproperty of triple\u279esubject 0..1 PropertyNode Attributes Inherited from typed node: id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType type 0..1 Range: Node Other properties Mappings: owl:Property","title":"Class: property node"},{"location":"PropertyNode/#class-property-node","text":"Note this only directly classifies nodes asserted to be rdf:Properties URI: sparqlfun:PropertyNode","title":"Class: property node"},{"location":"PropertyNode/#parents","text":"is_a: TypedNode","title":"Parents"},{"location":"PropertyNode/#referenced-by-class","text":"None predicate 0..1 PropertyNode None predicate1 0..1 PropertyNode None predicate2 0..1 PropertyNode RdfsSubpropertyOfTriple rdfs subproperty of triple\u279eobject 0..1 PropertyNode RdfsSubpropertyOfTriple rdfs subproperty of triple\u279esubject 0..1 PropertyNode","title":"Referenced by Class"},{"location":"PropertyNode/#attributes","text":"","title":"Attributes"},{"location":"PropertyNode/#inherited-from-typed-node","text":"id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType type 0..1 Range: Node","title":"Inherited from typed node:"},{"location":"PropertyNode/#other-properties","text":"Mappings: owl:Property","title":"Other properties"},{"location":"PropertyTrait/","text":"Class: property trait URI: sparqlfun:PropertyTrait Parents is_a: NodeTrait - abstract groupings/properties for different aspects of the model Attributes","title":"Class: property trait"},{"location":"PropertyTrait/#class-property-trait","text":"URI: sparqlfun:PropertyTrait","title":"Class: property trait"},{"location":"PropertyTrait/#parents","text":"is_a: NodeTrait - abstract groupings/properties for different aspects of the model","title":"Parents"},{"location":"PropertyTrait/#attributes","text":"","title":"Attributes"},{"location":"Quad/","text":"Class: quad Represents an RDF triple plus named graph URI: sparqlfun:Quad Parents is_a: Triple - Represents an RDF triple Children RelationGraphQuad Referenced by Class Attributes Own subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String graph 0..1 Description: Graph to which the triple belongs Range: Node Other properties Aliases: statement with graph In Subsets: base table","title":"Class: quad"},{"location":"Quad/#class-quad","text":"Represents an RDF triple plus named graph URI: sparqlfun:Quad","title":"Class: quad"},{"location":"Quad/#parents","text":"is_a: Triple - Represents an RDF triple","title":"Parents"},{"location":"Quad/#children","text":"RelationGraphQuad","title":"Children"},{"location":"Quad/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"Quad/#attributes","text":"","title":"Attributes"},{"location":"Quad/#own","text":"subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String graph 0..1 Description: Graph to which the triple belongs Range: Node","title":"Own"},{"location":"Quad/#other-properties","text":"Aliases: statement with graph In Subsets: base table","title":"Other properties"},{"location":"RdfFirstTriple/","text":"Class: rdf first triple A triple that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful URI: sparqlfun:RdfFirstTriple Parents is_a: RdfListTriple - A triple that is used to represent aspects of RDF lists Attributes Inherited from rdf list triple: predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String rdf list triple\u279esubject 0..1 Description: The rdf:List to which the triple applies Range: RdfListNode Other properties Comments: sqlview>> SELECT * WHERE triples WHERE predicate='rdf:first'","title":"Class: rdf first triple"},{"location":"RdfFirstTriple/#class-rdf-first-triple","text":"A triple that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful URI: sparqlfun:RdfFirstTriple","title":"Class: rdf first triple"},{"location":"RdfFirstTriple/#parents","text":"is_a: RdfListTriple - A triple that is used to represent aspects of RDF lists","title":"Parents"},{"location":"RdfFirstTriple/#attributes","text":"","title":"Attributes"},{"location":"RdfFirstTriple/#inherited-from-rdf-list-triple","text":"predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String rdf list triple\u279esubject 0..1 Description: The rdf:List to which the triple applies Range: RdfListNode","title":"Inherited from rdf list triple:"},{"location":"RdfFirstTriple/#other-properties","text":"Comments: sqlview>> SELECT * WHERE triples WHERE predicate='rdf:first'","title":"Other properties"},{"location":"RdfLevelSummaryStatistic/","text":"Class: rdf level summary statistic Abstract grouping for views/classes that provide some kind of count summary about an individual element URI: sparqlfun:RdfLevelSummaryStatistic Uses Mixin mixin: IsReport - Used to describe classes/views that have a reporting function Children CountOfInstantiatedClasses - Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated CountOfPredicates - Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL CountOfSubclasses - Number of subclasses for a given class Referenced by Class Attributes Own \u279eelement 0..1 Range: Node \u279ecount_value 0..1 Range: Integer","title":"Class: rdf level summary statistic"},{"location":"RdfLevelSummaryStatistic/#class-rdf-level-summary-statistic","text":"Abstract grouping for views/classes that provide some kind of count summary about an individual element URI: sparqlfun:RdfLevelSummaryStatistic","title":"Class: rdf level summary statistic"},{"location":"RdfLevelSummaryStatistic/#uses-mixin","text":"mixin: IsReport - Used to describe classes/views that have a reporting function","title":"Uses Mixin"},{"location":"RdfLevelSummaryStatistic/#children","text":"CountOfInstantiatedClasses - Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated CountOfPredicates - Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL CountOfSubclasses - Number of subclasses for a given class","title":"Children"},{"location":"RdfLevelSummaryStatistic/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"RdfLevelSummaryStatistic/#attributes","text":"","title":"Attributes"},{"location":"RdfLevelSummaryStatistic/#own","text":"\u279eelement 0..1 Range: Node \u279ecount_value 0..1 Range: Integer","title":"Own"},{"location":"RdfListMemberTriple/","text":"Class: rdf list member triple URI: sparqlfun:RdfListMemberTriple Parents is_a: RdfListTriple - A triple that is used to represent aspects of RDF lists Attributes Inherited from rdf list triple: predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String rdf list triple\u279esubject 0..1 Description: The rdf:List to which the triple applies Range: RdfListNode Other properties Comments: sqlview>> SELECT rest_t.subject, f.object FROM rdf_rest_transitive_statement AS rest_t JOIN rdf_first_statement AS f ON (rest_t.object = f.subject) UNION SELECT subject,object FROM rdf_first_statement;","title":"Class: rdf list member triple"},{"location":"RdfListMemberTriple/#class-rdf-list-member-triple","text":"URI: sparqlfun:RdfListMemberTriple","title":"Class: rdf list member triple"},{"location":"RdfListMemberTriple/#parents","text":"is_a: RdfListTriple - A triple that is used to represent aspects of RDF lists","title":"Parents"},{"location":"RdfListMemberTriple/#attributes","text":"","title":"Attributes"},{"location":"RdfListMemberTriple/#inherited-from-rdf-list-triple","text":"predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String rdf list triple\u279esubject 0..1 Description: The rdf:List to which the triple applies Range: RdfListNode","title":"Inherited from rdf list triple:"},{"location":"RdfListMemberTriple/#other-properties","text":"Comments: sqlview>> SELECT rest_t.subject, f.object FROM rdf_rest_transitive_statement AS rest_t JOIN rdf_first_statement AS f ON (rest_t.object = f.subject) UNION SELECT subject,object FROM rdf_first_statement;","title":"Other properties"},{"location":"RdfListNode/","text":"Class: rdf list node A node representing an RDF list. Note that you will not likely need to use this directly. URI: sparqlfun:RdfListNode Parents is_a: BlankNode - A node with an ID that is not preserved between databases Referenced by Class RdfListTriple rdf list triple\u279esubject 0..1 RdfListNode Attributes Inherited from blank node: id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType Other properties Comments: sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object = 'rdf:List';","title":"Class: rdf list node"},{"location":"RdfListNode/#class-rdf-list-node","text":"A node representing an RDF list. Note that you will not likely need to use this directly. URI: sparqlfun:RdfListNode","title":"Class: rdf list node"},{"location":"RdfListNode/#parents","text":"is_a: BlankNode - A node with an ID that is not preserved between databases","title":"Parents"},{"location":"RdfListNode/#referenced-by-class","text":"RdfListTriple rdf list triple\u279esubject 0..1 RdfListNode","title":"Referenced by Class"},{"location":"RdfListNode/#attributes","text":"","title":"Attributes"},{"location":"RdfListNode/#inherited-from-blank-node","text":"id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType","title":"Inherited from blank node:"},{"location":"RdfListNode/#other-properties","text":"Comments: sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object = 'rdf:List';","title":"Other properties"},{"location":"RdfListTriple/","text":"Class: rdf list triple A triple that is used to represent aspects of RDF lists URI: sparqlfun:RdfListTriple Parents is_a: Triple - Represents an RDF triple Children RdfFirstTriple - A triple that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberTriple RdfRestTransitiveTriple RdfRestTriple - A triple that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful Referenced by Class Attributes Own rdf list triple\u279esubject 0..1 Description: The rdf:List to which the triple applies Range: RdfListNode Inherited from triple: predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Class: rdf list triple"},{"location":"RdfListTriple/#class-rdf-list-triple","text":"A triple that is used to represent aspects of RDF lists URI: sparqlfun:RdfListTriple","title":"Class: rdf list triple"},{"location":"RdfListTriple/#parents","text":"is_a: Triple - Represents an RDF triple","title":"Parents"},{"location":"RdfListTriple/#children","text":"RdfFirstTriple - A triple that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberTriple RdfRestTransitiveTriple RdfRestTriple - A triple that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful","title":"Children"},{"location":"RdfListTriple/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"RdfListTriple/#attributes","text":"","title":"Attributes"},{"location":"RdfListTriple/#own","text":"rdf list triple\u279esubject 0..1 Description: The rdf:List to which the triple applies Range: RdfListNode","title":"Own"},{"location":"RdfListTriple/#inherited-from-triple","text":"predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Inherited from triple:"},{"location":"RdfRestTransitiveTriple/","text":"Class: rdf rest transitive triple URI: sparqlfun:RdfRestTransitiveTriple Parents is_a: RdfListTriple - A triple that is used to represent aspects of RDF lists Attributes Inherited from rdf list triple: predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String rdf list triple\u279esubject 0..1 Description: The rdf:List to which the triple applies Range: RdfListNode Other properties Comments: sqlview>> WITH RECURSIVE rdf_rest_transitive_statement ( subject, object ) AS (SELECT subject, object FROM rdf_rest_statement UNION ALL SELECT rest.subject, rest_t.object FROM rdf_rest_statement AS rest JOIN rdf_rest_transitive_statement AS rest_t ON rest.object = rest_t.subject ) SELECT * WHERE rdf_rest_transitive_statement","title":"Class: rdf rest transitive triple"},{"location":"RdfRestTransitiveTriple/#class-rdf-rest-transitive-triple","text":"URI: sparqlfun:RdfRestTransitiveTriple","title":"Class: rdf rest transitive triple"},{"location":"RdfRestTransitiveTriple/#parents","text":"is_a: RdfListTriple - A triple that is used to represent aspects of RDF lists","title":"Parents"},{"location":"RdfRestTransitiveTriple/#attributes","text":"","title":"Attributes"},{"location":"RdfRestTransitiveTriple/#inherited-from-rdf-list-triple","text":"predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String rdf list triple\u279esubject 0..1 Description: The rdf:List to which the triple applies Range: RdfListNode","title":"Inherited from rdf list triple:"},{"location":"RdfRestTransitiveTriple/#other-properties","text":"Comments: sqlview>> WITH RECURSIVE rdf_rest_transitive_statement ( subject, object ) AS (SELECT subject, object FROM rdf_rest_statement UNION ALL SELECT rest.subject, rest_t.object FROM rdf_rest_statement AS rest JOIN rdf_rest_transitive_statement AS rest_t ON rest.object = rest_t.subject ) SELECT * WHERE rdf_rest_transitive_statement","title":"Other properties"},{"location":"RdfRestTriple/","text":"Class: rdf rest triple A triple that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful URI: sparqlfun:RdfRestTriple Parents is_a: RdfListTriple - A triple that is used to represent aspects of RDF lists Attributes Inherited from rdf list triple: predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String rdf list triple\u279esubject 0..1 Description: The rdf:List to which the triple applies Range: RdfListNode Other properties Comments: sqlview>> SELECT * WHERE triples WHERE predicate='rdf:rest'","title":"Class: rdf rest triple"},{"location":"RdfRestTriple/#class-rdf-rest-triple","text":"A triple that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful URI: sparqlfun:RdfRestTriple","title":"Class: rdf rest triple"},{"location":"RdfRestTriple/#parents","text":"is_a: RdfListTriple - A triple that is used to represent aspects of RDF lists","title":"Parents"},{"location":"RdfRestTriple/#attributes","text":"","title":"Attributes"},{"location":"RdfRestTriple/#inherited-from-rdf-list-triple","text":"predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String rdf list triple\u279esubject 0..1 Description: The rdf:List to which the triple applies Range: RdfListNode","title":"Inherited from rdf list triple:"},{"location":"RdfRestTriple/#other-properties","text":"Comments: sqlview>> SELECT * WHERE triples WHERE predicate='rdf:rest'","title":"Other properties"},{"location":"RdfTypeTriple/","text":"Class: rdf type triple A triple that indicates the asserted type of the subject entity URI: sparqlfun:RdfTypeTriple Parents is_a: NodeToNodeTriple - A triple where object is a node Referenced by Class Attributes Own rdf type triple\u279eobject 0..1 Description: The entity type Range: ClassNode Inherited from node to node triple: subject 0..1 Range: Node predicate 0..1 Range: PropertyNode","title":"Class: rdf type triple"},{"location":"RdfTypeTriple/#class-rdf-type-triple","text":"A triple that indicates the asserted type of the subject entity URI: sparqlfun:RdfTypeTriple","title":"Class: rdf type triple"},{"location":"RdfTypeTriple/#parents","text":"is_a: NodeToNodeTriple - A triple where object is a node","title":"Parents"},{"location":"RdfTypeTriple/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"RdfTypeTriple/#attributes","text":"","title":"Attributes"},{"location":"RdfTypeTriple/#own","text":"rdf type triple\u279eobject 0..1 Description: The entity type Range: ClassNode","title":"Own"},{"location":"RdfTypeTriple/#inherited-from-node-to-node-triple","text":"subject 0..1 Range: Node predicate 0..1 Range: PropertyNode","title":"Inherited from node to node triple:"},{"location":"RdfsDomainTriple/","text":"Class: rdfs domain triple URI: sparqlfun:RdfsDomainTriple Parents is_a: NodeToNodeTriple - A triple where object is a node Attributes Inherited from node to node triple: subject 0..1 Range: Node predicate 0..1 Range: PropertyNode node to node triple\u279eobject 0..1 Description: a literal or node representing the object of the triple Range: Node","title":"Class: rdfs domain triple"},{"location":"RdfsDomainTriple/#class-rdfs-domain-triple","text":"URI: sparqlfun:RdfsDomainTriple","title":"Class: rdfs domain triple"},{"location":"RdfsDomainTriple/#parents","text":"is_a: NodeToNodeTriple - A triple where object is a node","title":"Parents"},{"location":"RdfsDomainTriple/#attributes","text":"","title":"Attributes"},{"location":"RdfsDomainTriple/#inherited-from-node-to-node-triple","text":"subject 0..1 Range: Node predicate 0..1 Range: PropertyNode node to node triple\u279eobject 0..1 Description: a literal or node representing the object of the triple Range: Node","title":"Inherited from node to node triple:"},{"location":"RdfsLabelTriple/","text":"Class: rdfs label triple URI: sparqlfun:RdfsLabelTriple Parents is_a: NodeToValueTriple - A triple where object is a literal Referenced by Class Attributes Own rdfs label triple\u279evalue 0..1 Description: The label value Range: String Inherited from node to value triple: subject 0..1 Range: Node predicate 0..1 Range: PropertyNode node to value triple\u279eobject 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Class: rdfs label triple"},{"location":"RdfsLabelTriple/#class-rdfs-label-triple","text":"URI: sparqlfun:RdfsLabelTriple","title":"Class: rdfs label triple"},{"location":"RdfsLabelTriple/#parents","text":"is_a: NodeToValueTriple - A triple where object is a literal","title":"Parents"},{"location":"RdfsLabelTriple/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"RdfsLabelTriple/#attributes","text":"","title":"Attributes"},{"location":"RdfsLabelTriple/#own","text":"rdfs label triple\u279evalue 0..1 Description: The label value Range: String","title":"Own"},{"location":"RdfsLabelTriple/#inherited-from-node-to-value-triple","text":"subject 0..1 Range: Node predicate 0..1 Range: PropertyNode node to value triple\u279eobject 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Inherited from node to value triple:"},{"location":"RdfsRangeTriple/","text":"Class: rdfs range triple URI: sparqlfun:RdfsRangeTriple Parents is_a: NodeToNodeTriple - A triple where object is a node Attributes Inherited from node to node triple: subject 0..1 Range: Node predicate 0..1 Range: PropertyNode node to node triple\u279eobject 0..1 Description: a literal or node representing the object of the triple Range: Node","title":"Class: rdfs range triple"},{"location":"RdfsRangeTriple/#class-rdfs-range-triple","text":"URI: sparqlfun:RdfsRangeTriple","title":"Class: rdfs range triple"},{"location":"RdfsRangeTriple/#parents","text":"is_a: NodeToNodeTriple - A triple where object is a node","title":"Parents"},{"location":"RdfsRangeTriple/#attributes","text":"","title":"Attributes"},{"location":"RdfsRangeTriple/#inherited-from-node-to-node-triple","text":"subject 0..1 Range: Node predicate 0..1 Range: PropertyNode node to node triple\u279eobject 0..1 Description: a literal or node representing the object of the triple Range: Node","title":"Inherited from node to node triple:"},{"location":"RdfsSubclassOfNamedTriple/","text":"Class: rdfs subclass of named triple URI: sparqlfun:RdfsSubclassOfNamedTriple Parents is_a: RdfsSubclassOfTriple Attributes Inherited from rdfs subclass of triple: predicate 0..1 Range: PropertyNode rdfs subclass of triple\u279esubject 0..1 Description: The subclass element of the triple Range: ClassNode rdfs subclass of triple\u279eobject 0..1 Description: The superclass element of the triple Range: ClassNode","title":"Class: rdfs subclass of named triple"},{"location":"RdfsSubclassOfNamedTriple/#class-rdfs-subclass-of-named-triple","text":"URI: sparqlfun:RdfsSubclassOfNamedTriple","title":"Class: rdfs subclass of named triple"},{"location":"RdfsSubclassOfNamedTriple/#parents","text":"is_a: RdfsSubclassOfTriple","title":"Parents"},{"location":"RdfsSubclassOfNamedTriple/#attributes","text":"","title":"Attributes"},{"location":"RdfsSubclassOfNamedTriple/#inherited-from-rdfs-subclass-of-triple","text":"predicate 0..1 Range: PropertyNode rdfs subclass of triple\u279esubject 0..1 Description: The subclass element of the triple Range: ClassNode rdfs subclass of triple\u279eobject 0..1 Description: The superclass element of the triple Range: ClassNode","title":"Inherited from rdfs subclass of triple:"},{"location":"RdfsSubclassOfTriple/","text":"Class: rdfs subclass of triple URI: sparqlfun:RdfsSubclassOfTriple Parents is_a: NodeToNodeTriple - A triple where object is a node Children RdfsSubclassOfNamedTriple Referenced by Class Attributes Own rdfs subclass of triple\u279esubject 0..1 Description: The subclass element of the triple Range: ClassNode rdfs subclass of triple\u279eobject 0..1 Description: The superclass element of the triple Range: ClassNode Inherited from node to node triple: predicate 0..1 Range: PropertyNode","title":"Class: rdfs subclass of triple"},{"location":"RdfsSubclassOfTriple/#class-rdfs-subclass-of-triple","text":"URI: sparqlfun:RdfsSubclassOfTriple","title":"Class: rdfs subclass of triple"},{"location":"RdfsSubclassOfTriple/#parents","text":"is_a: NodeToNodeTriple - A triple where object is a node","title":"Parents"},{"location":"RdfsSubclassOfTriple/#children","text":"RdfsSubclassOfNamedTriple","title":"Children"},{"location":"RdfsSubclassOfTriple/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"RdfsSubclassOfTriple/#attributes","text":"","title":"Attributes"},{"location":"RdfsSubclassOfTriple/#own","text":"rdfs subclass of triple\u279esubject 0..1 Description: The subclass element of the triple Range: ClassNode rdfs subclass of triple\u279eobject 0..1 Description: The superclass element of the triple Range: ClassNode","title":"Own"},{"location":"RdfsSubclassOfTriple/#inherited-from-node-to-node-triple","text":"predicate 0..1 Range: PropertyNode","title":"Inherited from node to node triple:"},{"location":"RdfsSubpropertyOfTriple/","text":"Class: rdfs subproperty of triple URI: sparqlfun:RdfsSubpropertyOfTriple Parents is_a: NodeToNodeTriple - A triple where object is a node Referenced by Class Attributes Own rdfs subproperty of triple\u279esubject 0..1 Description: The subproperty element of the triple Range: PropertyNode rdfs subproperty of triple\u279eobject 0..1 Description: The superproperty element of the triple Range: PropertyNode Inherited from node to node triple: predicate 0..1 Range: PropertyNode","title":"Class: rdfs subproperty of triple"},{"location":"RdfsSubpropertyOfTriple/#class-rdfs-subproperty-of-triple","text":"URI: sparqlfun:RdfsSubpropertyOfTriple","title":"Class: rdfs subproperty of triple"},{"location":"RdfsSubpropertyOfTriple/#parents","text":"is_a: NodeToNodeTriple - A triple where object is a node","title":"Parents"},{"location":"RdfsSubpropertyOfTriple/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"RdfsSubpropertyOfTriple/#attributes","text":"","title":"Attributes"},{"location":"RdfsSubpropertyOfTriple/#own","text":"rdfs subproperty of triple\u279esubject 0..1 Description: The subproperty element of the triple Range: PropertyNode rdfs subproperty of triple\u279eobject 0..1 Description: The superproperty element of the triple Range: PropertyNode","title":"Own"},{"location":"RdfsSubpropertyOfTriple/#inherited-from-node-to-node-triple","text":"predicate 0..1 Range: PropertyNode","title":"Inherited from node to node triple:"},{"location":"RelationGraphQuad/","text":"Class: relation graph quad URI: sparqlfun:RelationGraphQuad Parents is_a: Quad - Represents an RDF triple plus named graph Children NonRedundantQuad - A triple that indicates the asserted type of the subject entity UbergraphQuad Referenced by Class Attributes Own relation graph quad\u279egraph 0..1 Description: Indicates inference/redundancy status Range: Node Inherited from quad: subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Class: relation graph quad"},{"location":"RelationGraphQuad/#class-relation-graph-quad","text":"URI: sparqlfun:RelationGraphQuad","title":"Class: relation graph quad"},{"location":"RelationGraphQuad/#parents","text":"is_a: Quad - Represents an RDF triple plus named graph","title":"Parents"},{"location":"RelationGraphQuad/#children","text":"NonRedundantQuad - A triple that indicates the asserted type of the subject entity UbergraphQuad","title":"Children"},{"location":"RelationGraphQuad/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"RelationGraphQuad/#attributes","text":"","title":"Attributes"},{"location":"RelationGraphQuad/#own","text":"relation graph quad\u279egraph 0..1 Description: Indicates inference/redundancy status Range: Node","title":"Own"},{"location":"RelationGraphQuad/#inherited-from-quad","text":"subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Inherited from quad:"},{"location":"ResultSet/","text":"Class: ResultSet URI: sparqlfun:ResultSet Attributes Own results 0..* Range: GenericResult","title":"Class: ResultSet"},{"location":"ResultSet/#class-resultset","text":"URI: sparqlfun:ResultSet","title":"Class: ResultSet"},{"location":"ResultSet/#attributes","text":"","title":"Attributes"},{"location":"ResultSet/#own","text":"results 0..* Range: GenericResult","title":"Own"},{"location":"SubClassCountTriple/","text":"Class: SubClass count triple URI: sparqlfun:SubClassCountTriple Parents is_a: Triple - Represents an RDF triple Attributes Inherited from triple: subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Class: SubClass count triple"},{"location":"SubClassCountTriple/#class-subclass-count-triple","text":"URI: sparqlfun:SubClassCountTriple","title":"Class: SubClass count triple"},{"location":"SubClassCountTriple/#parents","text":"is_a: Triple - Represents an RDF triple","title":"Parents"},{"location":"SubClassCountTriple/#attributes","text":"","title":"Attributes"},{"location":"SubClassCountTriple/#inherited-from-triple","text":"subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Inherited from triple:"},{"location":"TaxonApplicable/","text":"Class: taxon applicable URI: sparqlfun:TaxonApplicable Mixin for InTaxonTriple (mixin) - In ubergraph, an in-taxon triple is pre-inferred InferredNeverInTaxon (mixin) - We infer via join NeverInTaxonTriple (mixin) Referenced by Class Attributes Own taxon applicable\u279esubject 0..1 Range: TaxonApplicableClass taxon applicable\u279eobject 0..1 Description: a literal or node representing the object of the triple Range: TaxonClass","title":"Class: taxon applicable"},{"location":"TaxonApplicable/#class-taxon-applicable","text":"URI: sparqlfun:TaxonApplicable","title":"Class: taxon applicable"},{"location":"TaxonApplicable/#mixin-for","text":"InTaxonTriple (mixin) - In ubergraph, an in-taxon triple is pre-inferred InferredNeverInTaxon (mixin) - We infer via join NeverInTaxonTriple (mixin)","title":"Mixin for"},{"location":"TaxonApplicable/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"TaxonApplicable/#attributes","text":"","title":"Attributes"},{"location":"TaxonApplicable/#own","text":"taxon applicable\u279esubject 0..1 Range: TaxonApplicableClass taxon applicable\u279eobject 0..1 Description: a literal or node representing the object of the triple Range: TaxonClass","title":"Own"},{"location":"TaxonApplicableClass/","text":"Class: taxon applicable class URI: sparqlfun:TaxonApplicableClass Parents is_a: ClassNode - A node that represents an RDFS/OWL class Referenced by Class TaxonApplicable taxon applicable\u279esubject 0..1 TaxonApplicableClass Attributes Inherited from class node: id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType type 0..1 Range: Node","title":"Class: taxon applicable class"},{"location":"TaxonApplicableClass/#class-taxon-applicable-class","text":"URI: sparqlfun:TaxonApplicableClass","title":"Class: taxon applicable class"},{"location":"TaxonApplicableClass/#parents","text":"is_a: ClassNode - A node that represents an RDFS/OWL class","title":"Parents"},{"location":"TaxonApplicableClass/#referenced-by-class","text":"TaxonApplicable taxon applicable\u279esubject 0..1 TaxonApplicableClass","title":"Referenced by Class"},{"location":"TaxonApplicableClass/#attributes","text":"","title":"Attributes"},{"location":"TaxonApplicableClass/#inherited-from-class-node","text":"id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType type 0..1 Range: Node","title":"Inherited from class node:"},{"location":"TaxonClass/","text":"Class: taxon class URI: sparqlfun:TaxonClass Parents is_a: ClassNode - A node that represents an RDFS/OWL class Referenced by Class TaxonApplicable taxon applicable\u279eobject 0..1 TaxonClass Attributes Inherited from class node: id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType type 0..1 Range: Node Other properties Comments: see ubergraph module for an implementation of this","title":"Class: taxon class"},{"location":"TaxonClass/#class-taxon-class","text":"URI: sparqlfun:TaxonClass","title":"Class: taxon class"},{"location":"TaxonClass/#parents","text":"is_a: ClassNode - A node that represents an RDFS/OWL class","title":"Parents"},{"location":"TaxonClass/#referenced-by-class","text":"TaxonApplicable taxon applicable\u279eobject 0..1 TaxonClass","title":"Referenced by Class"},{"location":"TaxonClass/#attributes","text":"","title":"Attributes"},{"location":"TaxonClass/#inherited-from-class-node","text":"id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType type 0..1 Range: Node","title":"Inherited from class node:"},{"location":"TaxonClass/#other-properties","text":"Comments: see ubergraph module for an implementation of this","title":"Other properties"},{"location":"Triple/","text":"Class: triple Represents an RDF triple URI: sparqlfun:Triple Children SubClassCountTriple InTaxonTriple - In ubergraph, an in-taxon triple is pre-inferred InferredNeverInTaxon - We infer via join NeverInTaxonTriple NodeToNodeTriple - A triple where object is a node NodeToValueTriple - A triple where object is a literal NormalizedInformationContentTriple Quad - Represents an RDF triple plus named graph Referenced by Class Attributes Own subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String Other properties Aliases: statement Mappings: rdf:Statement In Subsets: base table","title":"Class: triple"},{"location":"Triple/#class-triple","text":"Represents an RDF triple URI: sparqlfun:Triple","title":"Class: triple"},{"location":"Triple/#children","text":"SubClassCountTriple InTaxonTriple - In ubergraph, an in-taxon triple is pre-inferred InferredNeverInTaxon - We infer via join NeverInTaxonTriple NodeToNodeTriple - A triple where object is a node NodeToValueTriple - A triple where object is a literal NormalizedInformationContentTriple Quad - Represents an RDF triple plus named graph","title":"Children"},{"location":"Triple/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"Triple/#attributes","text":"","title":"Attributes"},{"location":"Triple/#own","text":"subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String","title":"Own"},{"location":"Triple/#other-properties","text":"Aliases: statement Mappings: rdf:Statement In Subsets: base table","title":"Other properties"},{"location":"TypedNode/","text":"Class: typed node URI: sparqlfun:TypedNode Parents is_a: Node - The basic unit of representation in an RDF or OWL graph Children ClassNode - A node that represents an RDFS/OWL class PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties Referenced by Class Attributes Own type 0..1 Range: Node Inherited from node: id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType","title":"Class: typed node"},{"location":"TypedNode/#class-typed-node","text":"URI: sparqlfun:TypedNode","title":"Class: typed node"},{"location":"TypedNode/#parents","text":"is_a: Node - The basic unit of representation in an RDF or OWL graph","title":"Parents"},{"location":"TypedNode/#children","text":"ClassNode - A node that represents an RDFS/OWL class PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties","title":"Children"},{"location":"TypedNode/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"TypedNode/#attributes","text":"","title":"Attributes"},{"location":"TypedNode/#own","text":"type 0..1 Range: Node","title":"Own"},{"location":"TypedNode/#inherited-from-node","text":"id 1..1 Description: An identifier for an element. Note blank node ids are not unique across databases Range: NodeIdType","title":"Inherited from node:"},{"location":"UberGraphSourceEnum/","text":"Enum: UberGraphSourceEnum URI: sparqlfun:UberGraphSourceEnum Other properties Permissible Values Text Description Meaning Other Information","title":"Enum: UberGraphSourceEnum"},{"location":"UberGraphSourceEnum/#enum-ubergraphsourceenum","text":"URI: sparqlfun:UberGraphSourceEnum","title":"Enum: UberGraphSourceEnum"},{"location":"UberGraphSourceEnum/#other-properties","text":"","title":"Other properties"},{"location":"UberGraphSourceEnum/#permissible-values","text":"Text Description Meaning Other Information","title":"Permissible Values"},{"location":"UbergraphQuad/","text":"Class: ubergraph quad URI: sparqlfun:UbergraphQuad Parents is_a: RelationGraphQuad Children IsAOrPartOf Referenced by Class Attributes Inherited from relation graph quad: subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String relation graph quad\u279egraph 0..1 Description: Indicates inference/redundancy status Range: Node","title":"Class: ubergraph quad"},{"location":"UbergraphQuad/#class-ubergraph-quad","text":"URI: sparqlfun:UbergraphQuad","title":"Class: ubergraph quad"},{"location":"UbergraphQuad/#parents","text":"is_a: RelationGraphQuad","title":"Parents"},{"location":"UbergraphQuad/#children","text":"IsAOrPartOf","title":"Children"},{"location":"UbergraphQuad/#referenced-by-class","text":"","title":"Referenced by Class"},{"location":"UbergraphQuad/#attributes","text":"","title":"Attributes"},{"location":"UbergraphQuad/#inherited-from-relation-graph-quad","text":"subject 0..1 Range: Node predicate 0..1 Range: PropertyNode object 0..1 Description: a literal or node representing the object of the triple Range: String relation graph quad\u279egraph 0..1 Description: Indicates inference/redundancy status Range: Node","title":"Inherited from relation graph quad:"},{"location":"UbergraphTaxonClass/","text":"Class: ubergraph taxon class URI: sparqlfun:UbergraphTaxonClass Attributes","title":"Class: ubergraph taxon class"},{"location":"UbergraphTaxonClass/#class-ubergraph-taxon-class","text":"URI: sparqlfun:UbergraphTaxonClass","title":"Class: ubergraph taxon class"},{"location":"UbergraphTaxonClass/#attributes","text":"","title":"Attributes"},{"location":"ancestor/","text":"Slot: ancestor URI: sparqlfun:ancestor Domain and Range None \u2192 0..1 String Parents Children Used by PairwiseCommonSubClassAncestor PairwiseCommonAncestor","title":"Slot: ancestor"},{"location":"ancestor/#slot-ancestor","text":"URI: sparqlfun:ancestor","title":"Slot: ancestor"},{"location":"ancestor/#domain-and-range","text":"None \u2192 0..1 String","title":"Domain and Range"},{"location":"ancestor/#parents","text":"","title":"Parents"},{"location":"ancestor/#children","text":"","title":"Children"},{"location":"ancestor/#used-by","text":"PairwiseCommonSubClassAncestor PairwiseCommonAncestor","title":"Used by"},{"location":"base/","text":"Slot: base The base URI a prefix will expand to URI: sparqlfun:base Domain and Range None \u2192 0..1 Uri Parents Children Used by Prefix Other properties Mappings: sh:namespace","title":"Slot: base"},{"location":"base/#slot-base","text":"The base URI a prefix will expand to URI: sparqlfun:base","title":"Slot: base"},{"location":"base/#domain-and-range","text":"None \u2192 0..1 Uri","title":"Domain and Range"},{"location":"base/#parents","text":"","title":"Parents"},{"location":"base/#children","text":"","title":"Children"},{"location":"base/#used-by","text":"Prefix","title":"Used by"},{"location":"base/#other-properties","text":"Mappings: sh:namespace","title":"Other properties"},{"location":"basicClass__parents/","text":"Slot: parents URI: sparqlfun:basicClass__parents Domain and Range None \u2192 0..* ClassNode Parents Children Used by BasicClass","title":"Slot: parents"},{"location":"basicClass__parents/#slot-parents","text":"URI: sparqlfun:basicClass__parents","title":"Slot: parents"},{"location":"basicClass__parents/#domain-and-range","text":"None \u2192 0..* ClassNode","title":"Domain and Range"},{"location":"basicClass__parents/#parents","text":"","title":"Parents"},{"location":"basicClass__parents/#children","text":"","title":"Children"},{"location":"basicClass__parents/#used-by","text":"BasicClass","title":"Used by"},{"location":"basicClass__subClassOf/","text":"Slot: subClassOf URI: sparqlfun:basicClass__subClassOf Domain and Range None \u2192 0..* ClassNode Parents Children Used by BasicClass Other properties Mappings: rdfs:subClassOf","title":"Slot: subClassOf"},{"location":"basicClass__subClassOf/#slot-subclassof","text":"URI: sparqlfun:basicClass__subClassOf","title":"Slot: subClassOf"},{"location":"basicClass__subClassOf/#domain-and-range","text":"None \u2192 0..* ClassNode","title":"Domain and Range"},{"location":"basicClass__subClassOf/#parents","text":"","title":"Parents"},{"location":"basicClass__subClassOf/#children","text":"","title":"Children"},{"location":"basicClass__subClassOf/#used-by","text":"BasicClass","title":"Used by"},{"location":"basicClass__subClassOf/#other-properties","text":"Mappings: rdfs:subClassOf","title":"Other properties"},{"location":"class_with_constraint/","text":"Slot: class_with_constraint URI: sparqlfun:class_with_constraint Domain and Range None \u2192 0..1 String Parents Children Used by InferredNeverInTaxon","title":"Slot: class_with_constraint"},{"location":"class_with_constraint/#slot-class_with_constraint","text":"URI: sparqlfun:class_with_constraint","title":"Slot: class_with_constraint"},{"location":"class_with_constraint/#domain-and-range","text":"None \u2192 0..1 String","title":"Domain and Range"},{"location":"class_with_constraint/#parents","text":"","title":"Parents"},{"location":"class_with_constraint/#children","text":"","title":"Children"},{"location":"class_with_constraint/#used-by","text":"InferredNeverInTaxon","title":"Used by"},{"location":"datatype/","text":"Slot: datatype URI: sparqlfun:datatype Domain and Range None \u2192 0..1 String Parents Children Used by","title":"Slot: datatype"},{"location":"datatype/#slot-datatype","text":"URI: sparqlfun:datatype","title":"Slot: datatype"},{"location":"datatype/#domain-and-range","text":"None \u2192 0..1 String","title":"Domain and Range"},{"location":"datatype/#parents","text":"","title":"Parents"},{"location":"datatype/#children","text":"","title":"Children"},{"location":"datatype/#used-by","text":"","title":"Used by"},{"location":"definition/","text":"Slot: definition URI: sparqlfun:definition Domain and Range None \u2192 0..1 String Parents Children Used by OboClass OboClassFiltered Other properties Mappings: IAO:0000115","title":"Slot: definition"},{"location":"definition/#slot-definition","text":"URI: sparqlfun:definition","title":"Slot: definition"},{"location":"definition/#domain-and-range","text":"None \u2192 0..1 String","title":"Domain and Range"},{"location":"definition/#parents","text":"","title":"Parents"},{"location":"definition/#children","text":"","title":"Children"},{"location":"definition/#used-by","text":"OboClass OboClassFiltered","title":"Used by"},{"location":"definition/#other-properties","text":"Mappings: IAO:0000115","title":"Other properties"},{"location":"description/","text":"Slot: description URI: sparqlfun:description Domain and Range None \u2192 0..1 String Parents Children Used by Other properties Mappings: dcterms:description","title":"Slot: description"},{"location":"description/#slot-description","text":"URI: sparqlfun:description","title":"Slot: description"},{"location":"description/#domain-and-range","text":"None \u2192 0..1 String","title":"Domain and Range"},{"location":"description/#parents","text":"","title":"Parents"},{"location":"description/#children","text":"","title":"Children"},{"location":"description/#used-by","text":"","title":"Used by"},{"location":"description/#other-properties","text":"Mappings: dcterms:description","title":"Other properties"},{"location":"direct_taxon/","text":"Slot: direct_taxon URI: sparqlfun:direct_taxon Domain and Range None \u2192 0..1 String Parents Children Used by InferredNeverInTaxon","title":"Slot: direct_taxon"},{"location":"direct_taxon/#slot-direct_taxon","text":"URI: sparqlfun:direct_taxon","title":"Slot: direct_taxon"},{"location":"direct_taxon/#domain-and-range","text":"None \u2192 0..1 String","title":"Domain and Range"},{"location":"direct_taxon/#parents","text":"","title":"Parents"},{"location":"direct_taxon/#children","text":"","title":"Children"},{"location":"direct_taxon/#used-by","text":"InferredNeverInTaxon","title":"Used by"},{"location":"exact_synonyms/","text":"Slot: exact_synonyms URI: sparqlfun:exact_synonyms Domain and Range None \u2192 0..* String Parents Children Used by OboClass OboClassFiltered Other properties Mappings: oboInOwl:hasExactSynonym","title":"Slot: exact_synonyms"},{"location":"exact_synonyms/#slot-exact_synonyms","text":"URI: sparqlfun:exact_synonyms","title":"Slot: exact_synonyms"},{"location":"exact_synonyms/#domain-and-range","text":"None \u2192 0..* String","title":"Domain and Range"},{"location":"exact_synonyms/#parents","text":"","title":"Parents"},{"location":"exact_synonyms/#children","text":"","title":"Children"},{"location":"exact_synonyms/#used-by","text":"OboClass OboClassFiltered","title":"Used by"},{"location":"exact_synonyms/#other-properties","text":"Mappings: oboInOwl:hasExactSynonym","title":"Other properties"},{"location":"graph/","text":"Slot: graph Graph to which the triple belongs URI: sparqlfun:graph Domain and Range None \u2192 0..1 Node Parents Children relation graph quad\u279egraph Used by Quad","title":"Slot: graph"},{"location":"graph/#slot-graph","text":"Graph to which the triple belongs URI: sparqlfun:graph","title":"Slot: graph"},{"location":"graph/#domain-and-range","text":"None \u2192 0..1 Node","title":"Domain and Range"},{"location":"graph/#parents","text":"","title":"Parents"},{"location":"graph/#children","text":"relation graph quad\u279egraph","title":"Children"},{"location":"graph/#used-by","text":"Quad","title":"Used by"},{"location":"home/","text":"sparqlfun LinkML based SPARQL template library and execution engine modularized core library of SPARQL templates generic templates using common vocabs (rdf, owl, skos, ...) OBO and biology specific, e.g. Ubergraph coming soon: uniprot, wikidata, etc Fully FAIR description of templates Each template has a URI Each template parameters has a URI Full metadata including descriptions of each Templates described in YAML, RDF, SHACL, ShEx, ... optional python bindings using LinkML supports both SELECT and CONSTRUCT optional export to TSV, JSON, YAML Browse the default templates http://linkml.io/sparqlfun/ Note: currently not all metadata from the yaml is shown in the generated docs Command Line sparqlfun -e ubergraph -T PairwiseCommonSubClassAncestor node1=GO:0046220 node2=GO:0008295 results: results: - node1: GO:0046220 node2: GO:0008295 predicate1: rdfs:subClassOf predicate2: rdfs:subClassOf ancestor: GO:0009987 - node1: GO:0046220 node2: GO:0008295 predicate1: rdfs:subClassOf predicate2: rdfs:subClassOf ancestor: GO:0044237 - node1: GO:0046220 node2: GO:0008295 predicate1: rdfs:subClassOf predicate2: rdfs:subClassOf ancestor: GO:0044271 ... Python se = SparqlEngine(endpoint='ubergraph') se.bind_prefixes(GO='http://purl.obolibrary.org/obo/GO_') for row in se.query(PairwiseCommonSubClassAncestor, node1='GO:0046220', node2='GO:0008295'): print(f'ROW={row}') For more examples, see tests/ Service (via Fast API) coming soon! Browsing the templates source is in sparqlfun/schema add new templates here Browse the generated markdown on the site How it works Basics Templates are defined as YAML files following the LinkML schema. A yaml file with a single template might look like this: classes: my template: slots: - my_var1 - my_var2 annotations: sparql.select: |- SELECT * WHERE { ... ?my_var1 ... ?my_var2} slots: my_var1: description: about my var 1 my_var2: description: about my var 2 This defines a template MyTemplate with two slots/parameters, and an arbitrarily complex SPARQL select query. Note that the definitions of the slots go in a different section from the classes/templates. You are encouraged to \"reuse\" slots across templates. The above can be used in queries: sparqlfun -e ubergraph -T MyTemplate my_var2=MY_VAL You can ground any or all of your vars on the command line (if you ground all then your SELECT is effectively an ASK query). However, the features go beyond other templating systems, and leverage the fact that LinkML is a fully-fledged rich modeling language with bindings to JSON-Schema, SHACL, ShEx, etc. For example, you will get markdown documentation describing your templates. This markdown documentation will be even richer if you annotate your schemas with metadata such as descriptions ranges for slots mappings and URIs for your templates and slots Template Inheritance Templates can be inherited, facilitating reuse and composition patterns To illustrate consider a simple \"base\" template to query a triple: triple: aliases: - statement description: >- Represents an RDF triple slots: - subject - predicate - object class_uri: rdf:Statement in_subset: - base table annotations: sparql.select: SELECT * WHERE { ?subject ?predicate ?object} This is not a particularly useful template in isolation - you may as well query directly with sparql (nevertheless it can be useful to have templates for even this simple pattern, to faciliate generation of APIs etc) This template can be inherited, which means that slots will be inherited, eliminating some boilerplate and the need to redefine them Inerhitance allows even more powerful features using the LinkML classification_rules construct. Let's say we want to represent type triples as children of generic triples: rdf type triple: is_a: triple description: >- A triple that indicates the asserted type of the subject entity slot_usage: object: description: >- The entity type range: class node classification_rules: - is_a: triple slot_conditions: predicate: equals_string: rdf:type Note we don't need to specify a SPARQL template here - the template is autogenerated from the classification rule. Modularity LinkML allows importing so templates can be modularized In future this repo may be split up, with the bio/obo specific features migrating to a new repo. Use of Jinja commands TODO - document this Supported Endpoints This framework can be used with any SPARQL endpoint. However, the current pre-defined templates are geared towards the combination of OBO-style ontologies together with storage patterns employed in triplestores such as ubergraph and ontobee. ubergraph In particular, ubergraph uses the relation-graph inference tool to pre-compute inferred direct triples from TBox existential axioms, allowing for simple and powerful queries over inferred ontologies See also This was inspired in part by the powerful but arcane sparqlprog system TODOs Better Document framework templates How-tos for use with Python, SHACL, ... exemplar notebooks Unify with SQL/rdftab functionality in semantic-sql Split into bio-specific Expose more ubergraph awesomeness FastAPI/serverless endpoint Templates for uniprot gocams wikidata","title":"Readme"},{"location":"home/#sparqlfun","text":"LinkML based SPARQL template library and execution engine modularized core library of SPARQL templates generic templates using common vocabs (rdf, owl, skos, ...) OBO and biology specific, e.g. Ubergraph coming soon: uniprot, wikidata, etc Fully FAIR description of templates Each template has a URI Each template parameters has a URI Full metadata including descriptions of each Templates described in YAML, RDF, SHACL, ShEx, ... optional python bindings using LinkML supports both SELECT and CONSTRUCT optional export to TSV, JSON, YAML","title":"sparqlfun"},{"location":"home/#browse-the-default-templates","text":"http://linkml.io/sparqlfun/ Note: currently not all metadata from the yaml is shown in the generated docs","title":"Browse the default templates"},{"location":"home/#command-line","text":"sparqlfun -e ubergraph -T PairwiseCommonSubClassAncestor node1=GO:0046220 node2=GO:0008295 results: results: - node1: GO:0046220 node2: GO:0008295 predicate1: rdfs:subClassOf predicate2: rdfs:subClassOf ancestor: GO:0009987 - node1: GO:0046220 node2: GO:0008295 predicate1: rdfs:subClassOf predicate2: rdfs:subClassOf ancestor: GO:0044237 - node1: GO:0046220 node2: GO:0008295 predicate1: rdfs:subClassOf predicate2: rdfs:subClassOf ancestor: GO:0044271 ...","title":"Command Line"},{"location":"home/#python","text":"se = SparqlEngine(endpoint='ubergraph') se.bind_prefixes(GO='http://purl.obolibrary.org/obo/GO_') for row in se.query(PairwiseCommonSubClassAncestor, node1='GO:0046220', node2='GO:0008295'): print(f'ROW={row}') For more examples, see tests/","title":"Python"},{"location":"home/#service-via-fast-api","text":"coming soon!","title":"Service (via Fast API)"},{"location":"home/#browsing-the-templates","text":"source is in sparqlfun/schema add new templates here Browse the generated markdown on the site","title":"Browsing the templates"},{"location":"home/#how-it-works","text":"","title":"How it works"},{"location":"home/#basics","text":"Templates are defined as YAML files following the LinkML schema. A yaml file with a single template might look like this: classes: my template: slots: - my_var1 - my_var2 annotations: sparql.select: |- SELECT * WHERE { ... ?my_var1 ... ?my_var2} slots: my_var1: description: about my var 1 my_var2: description: about my var 2 This defines a template MyTemplate with two slots/parameters, and an arbitrarily complex SPARQL select query. Note that the definitions of the slots go in a different section from the classes/templates. You are encouraged to \"reuse\" slots across templates. The above can be used in queries: sparqlfun -e ubergraph -T MyTemplate my_var2=MY_VAL You can ground any or all of your vars on the command line (if you ground all then your SELECT is effectively an ASK query). However, the features go beyond other templating systems, and leverage the fact that LinkML is a fully-fledged rich modeling language with bindings to JSON-Schema, SHACL, ShEx, etc. For example, you will get markdown documentation describing your templates. This markdown documentation will be even richer if you annotate your schemas with metadata such as descriptions ranges for slots mappings and URIs for your templates and slots","title":"Basics"},{"location":"home/#template-inheritance","text":"Templates can be inherited, facilitating reuse and composition patterns To illustrate consider a simple \"base\" template to query a triple: triple: aliases: - statement description: >- Represents an RDF triple slots: - subject - predicate - object class_uri: rdf:Statement in_subset: - base table annotations: sparql.select: SELECT * WHERE { ?subject ?predicate ?object} This is not a particularly useful template in isolation - you may as well query directly with sparql (nevertheless it can be useful to have templates for even this simple pattern, to faciliate generation of APIs etc) This template can be inherited, which means that slots will be inherited, eliminating some boilerplate and the need to redefine them Inerhitance allows even more powerful features using the LinkML classification_rules construct. Let's say we want to represent type triples as children of generic triples: rdf type triple: is_a: triple description: >- A triple that indicates the asserted type of the subject entity slot_usage: object: description: >- The entity type range: class node classification_rules: - is_a: triple slot_conditions: predicate: equals_string: rdf:type Note we don't need to specify a SPARQL template here - the template is autogenerated from the classification rule.","title":"Template Inheritance"},{"location":"home/#modularity","text":"LinkML allows importing so templates can be modularized In future this repo may be split up, with the bio/obo specific features migrating to a new repo.","title":"Modularity"},{"location":"home/#use-of-jinja-commands","text":"TODO - document this","title":"Use of Jinja commands"},{"location":"home/#supported-endpoints","text":"This framework can be used with any SPARQL endpoint. However, the current pre-defined templates are geared towards the combination of OBO-style ontologies together with storage patterns employed in triplestores such as ubergraph and ontobee. ubergraph In particular, ubergraph uses the relation-graph inference tool to pre-compute inferred direct triples from TBox existential axioms, allowing for simple and powerful queries over inferred ontologies","title":"Supported Endpoints"},{"location":"home/#see-also","text":"This was inspired in part by the powerful but arcane sparqlprog system","title":"See also"},{"location":"home/#todos","text":"Better Document framework templates How-tos for use with Python, SHACL, ... exemplar notebooks Unify with SQL/rdftab functionality in semantic-sql Split into bio-specific Expose more ubergraph awesomeness FastAPI/serverless endpoint Templates for uniprot gocams wikidata","title":"TODOs"},{"location":"id/","text":"Slot: id An identifier for an element. Note blank node ids are not unique across databases URI: sparqlfun:id Domain and Range None \u2192 1..1 NodeIdType Parents Children iri node\u279eid Used by BasicClass BlankNode ClassNode NamedIndividualNode Node OboClass OboClassFiltered PropertyNode TaxonApplicableClass TaxonClass TypedNode","title":"Slot: id"},{"location":"id/#slot-id","text":"An identifier for an element. Note blank node ids are not unique across databases URI: sparqlfun:id","title":"Slot: id"},{"location":"id/#domain-and-range","text":"None \u2192 1..1 NodeIdType","title":"Domain and Range"},{"location":"id/#parents","text":"","title":"Parents"},{"location":"id/#children","text":"iri node\u279eid","title":"Children"},{"location":"id/#used-by","text":"BasicClass BlankNode ClassNode NamedIndividualNode Node OboClass OboClassFiltered PropertyNode TaxonApplicableClass TaxonClass TypedNode","title":"Used by"},{"location":"iri_node_id/","text":"Slot: id An identifier for an element. Note blank node ids are not unique across databases URI: sparqlfun:iri_node_id Domain and Range IriNode \u2192 1..1 NodeIdType Parents is_a: id Children Used by IriNode","title":"Slot: id"},{"location":"iri_node_id/#slot-id","text":"An identifier for an element. Note blank node ids are not unique across databases URI: sparqlfun:iri_node_id","title":"Slot: id"},{"location":"iri_node_id/#domain-and-range","text":"IriNode \u2192 1..1 NodeIdType","title":"Domain and Range"},{"location":"iri_node_id/#parents","text":"is_a: id","title":"Parents"},{"location":"iri_node_id/#children","text":"","title":"Children"},{"location":"iri_node_id/#used-by","text":"IriNode","title":"Used by"},{"location":"is_a_or_part_of_graph/","text":"Slot: graph Source of URI: sparqlfun:is_a_or_part_of_graph Domain and Range IsAOrPartOf \u2192 0..1 Node Parents is_a: relation graph quad\u279egraph Children Used by IsAOrPartOf","title":"Slot: graph"},{"location":"is_a_or_part_of_graph/#slot-graph","text":"Source of URI: sparqlfun:is_a_or_part_of_graph","title":"Slot: graph"},{"location":"is_a_or_part_of_graph/#domain-and-range","text":"IsAOrPartOf \u2192 0..1 Node","title":"Domain and Range"},{"location":"is_a_or_part_of_graph/#parents","text":"is_a: relation graph quad\u279egraph","title":"Parents"},{"location":"is_a_or_part_of_graph/#children","text":"","title":"Children"},{"location":"is_a_or_part_of_graph/#used-by","text":"IsAOrPartOf","title":"Used by"},{"location":"language/","text":"Slot: language URI: sparqlfun:language Domain and Range None \u2192 0..1 String Parents Children Used by","title":"Slot: language"},{"location":"language/#slot-language","text":"URI: sparqlfun:language","title":"Slot: language"},{"location":"language/#domain-and-range","text":"None \u2192 0..1 String","title":"Domain and Range"},{"location":"language/#parents","text":"","title":"Parents"},{"location":"language/#children","text":"","title":"Children"},{"location":"language/#used-by","text":"","title":"Used by"},{"location":"node1/","text":"Slot: node1 URI: sparqlfun:node1 Domain and Range None \u2192 0..1 String Parents Children Used by PairwiseCommonSubClassAncestor PairwiseCommonAncestor","title":"Slot: node1"},{"location":"node1/#slot-node1","text":"URI: sparqlfun:node1","title":"Slot: node1"},{"location":"node1/#domain-and-range","text":"None \u2192 0..1 String","title":"Domain and Range"},{"location":"node1/#parents","text":"","title":"Parents"},{"location":"node1/#children","text":"","title":"Children"},{"location":"node1/#used-by","text":"PairwiseCommonSubClassAncestor PairwiseCommonAncestor","title":"Used by"},{"location":"node2/","text":"Slot: node2 URI: sparqlfun:node2 Domain and Range None \u2192 0..1 String Parents Children Used by PairwiseCommonSubClassAncestor PairwiseCommonAncestor","title":"Slot: node2"},{"location":"node2/#slot-node2","text":"URI: sparqlfun:node2","title":"Slot: node2"},{"location":"node2/#domain-and-range","text":"None \u2192 0..1 String","title":"Domain and Range"},{"location":"node2/#parents","text":"","title":"Parents"},{"location":"node2/#children","text":"","title":"Children"},{"location":"node2/#used-by","text":"PairwiseCommonSubClassAncestor PairwiseCommonAncestor","title":"Used by"},{"location":"node_to_node_triple_object/","text":"Slot: object a literal or node representing the object of the triple URI: sparqlfun:node_to_node_triple_object Domain and Range NodeToNodeTriple \u2192 0..1 Node Parents is_a: object Children rdf type triple\u279eobject rdfs subclass of triple\u279eobject rdfs subproperty of triple\u279eobject Used by NodeToNodeTriple RdfsDomainTriple RdfsRangeTriple Other properties Mappings: rdf:object","title":"Slot: object"},{"location":"node_to_node_triple_object/#slot-object","text":"a literal or node representing the object of the triple URI: sparqlfun:node_to_node_triple_object","title":"Slot: object"},{"location":"node_to_node_triple_object/#domain-and-range","text":"NodeToNodeTriple \u2192 0..1 Node","title":"Domain and Range"},{"location":"node_to_node_triple_object/#parents","text":"is_a: object","title":"Parents"},{"location":"node_to_node_triple_object/#children","text":"rdf type triple\u279eobject rdfs subclass of triple\u279eobject rdfs subproperty of triple\u279eobject","title":"Children"},{"location":"node_to_node_triple_object/#used-by","text":"NodeToNodeTriple RdfsDomainTriple RdfsRangeTriple","title":"Used by"},{"location":"node_to_node_triple_object/#other-properties","text":"Mappings: rdf:object","title":"Other properties"},{"location":"node_to_value_triple_object/","text":"Slot: object a literal or node representing the object of the triple URI: sparqlfun:node_to_value_triple_object Domain and Range NodeToValueTriple \u2192 0..1 String Parents is_a: object Children Used by DefinitionTriple NodeToValueTriple RdfsLabelTriple Other properties Mappings: rdf:object","title":"Slot: object"},{"location":"node_to_value_triple_object/#slot-object","text":"a literal or node representing the object of the triple URI: sparqlfun:node_to_value_triple_object","title":"Slot: object"},{"location":"node_to_value_triple_object/#domain-and-range","text":"NodeToValueTriple \u2192 0..1 String","title":"Domain and Range"},{"location":"node_to_value_triple_object/#parents","text":"is_a: object","title":"Parents"},{"location":"node_to_value_triple_object/#children","text":"","title":"Children"},{"location":"node_to_value_triple_object/#used-by","text":"DefinitionTriple NodeToValueTriple RdfsLabelTriple","title":"Used by"},{"location":"node_to_value_triple_object/#other-properties","text":"Mappings: rdf:object","title":"Other properties"},{"location":"non_redundant_quad_graph/","text":"Slot: graph Source of URI: sparqlfun:non_redundant_quad_graph Domain and Range NonRedundantQuad \u2192 0..1 ClassNode Parents is_a: relation graph quad\u279egraph Children Used by NonRedundantQuad","title":"Slot: graph"},{"location":"non_redundant_quad_graph/#slot-graph","text":"Source of URI: sparqlfun:non_redundant_quad_graph","title":"Slot: graph"},{"location":"non_redundant_quad_graph/#domain-and-range","text":"NonRedundantQuad \u2192 0..1 ClassNode","title":"Domain and Range"},{"location":"non_redundant_quad_graph/#parents","text":"is_a: relation graph quad\u279egraph","title":"Parents"},{"location":"non_redundant_quad_graph/#children","text":"","title":"Children"},{"location":"non_redundant_quad_graph/#used-by","text":"NonRedundantQuad","title":"Used by"},{"location":"object/","text":"Slot: object a literal or node representing the object of the triple URI: sparqlfun:object Domain and Range None \u2192 0..1 String Parents Children node to node triple\u279eobject node to value triple\u279eobject taxon applicable\u279eobject Used by SubClassCountTriple InTaxonTriple InferredNeverInTaxon IsAOrPartOf NeverInTaxonTriple NonRedundantQuad NormalizedInformationContentTriple Quad RelationGraphQuad Triple UbergraphQuad Other properties Mappings: rdf:object","title":"Slot: object"},{"location":"object/#slot-object","text":"a literal or node representing the object of the triple URI: sparqlfun:object","title":"Slot: object"},{"location":"object/#domain-and-range","text":"None \u2192 0..1 String","title":"Domain and Range"},{"location":"object/#parents","text":"","title":"Parents"},{"location":"object/#children","text":"node to node triple\u279eobject node to value triple\u279eobject taxon applicable\u279eobject","title":"Children"},{"location":"object/#used-by","text":"SubClassCountTriple InTaxonTriple InferredNeverInTaxon IsAOrPartOf NeverInTaxonTriple NonRedundantQuad NormalizedInformationContentTriple Quad RelationGraphQuad Triple UbergraphQuad","title":"Used by"},{"location":"object/#other-properties","text":"Mappings: rdf:object","title":"Other properties"},{"location":"predicate/","text":"Slot: predicate URI: sparqlfun:predicate Domain and Range None \u2192 0..1 PropertyNode Parents Children predicate1 predicate2 Used by SubClassCountTriple DefinitionTriple InTaxonTriple InferredNeverInTaxon IsAOrPartOf NeverInTaxonTriple NodeToNodeTriple NodeToValueTriple NonRedundantQuad NormalizedInformationContentTriple Quad RdfTypeTriple RdfsDomainTriple RdfsLabelTriple RdfsRangeTriple RdfsSubclassOfNamedTriple RdfsSubclassOfTriple RdfsSubpropertyOfTriple RelationGraphQuad Triple UbergraphQuad Other properties Mappings: rdf:predicate","title":"Slot: predicate"},{"location":"predicate/#slot-predicate","text":"URI: sparqlfun:predicate","title":"Slot: predicate"},{"location":"predicate/#domain-and-range","text":"None \u2192 0..1 PropertyNode","title":"Domain and Range"},{"location":"predicate/#parents","text":"","title":"Parents"},{"location":"predicate/#children","text":"predicate1 predicate2","title":"Children"},{"location":"predicate/#used-by","text":"SubClassCountTriple DefinitionTriple InTaxonTriple InferredNeverInTaxon IsAOrPartOf NeverInTaxonTriple NodeToNodeTriple NodeToValueTriple NonRedundantQuad NormalizedInformationContentTriple Quad RdfTypeTriple RdfsDomainTriple RdfsLabelTriple RdfsRangeTriple RdfsSubclassOfNamedTriple RdfsSubclassOfTriple RdfsSubpropertyOfTriple RelationGraphQuad Triple UbergraphQuad","title":"Used by"},{"location":"predicate/#other-properties","text":"Mappings: rdf:predicate","title":"Other properties"},{"location":"predicate1/","text":"Slot: predicate1 URI: sparqlfun:predicate1 Domain and Range None \u2192 0..1 PropertyNode Parents is_a: predicate Children Used by PairwiseCommonSubClassAncestor PairwiseCommonAncestor","title":"Slot: predicate1"},{"location":"predicate1/#slot-predicate1","text":"URI: sparqlfun:predicate1","title":"Slot: predicate1"},{"location":"predicate1/#domain-and-range","text":"None \u2192 0..1 PropertyNode","title":"Domain and Range"},{"location":"predicate1/#parents","text":"is_a: predicate","title":"Parents"},{"location":"predicate1/#children","text":"","title":"Children"},{"location":"predicate1/#used-by","text":"PairwiseCommonSubClassAncestor PairwiseCommonAncestor","title":"Used by"},{"location":"predicate2/","text":"Slot: predicate2 URI: sparqlfun:predicate2 Domain and Range None \u2192 0..1 PropertyNode Parents is_a: predicate Children Used by PairwiseCommonSubClassAncestor PairwiseCommonAncestor","title":"Slot: predicate2"},{"location":"predicate2/#slot-predicate2","text":"URI: sparqlfun:predicate2","title":"Slot: predicate2"},{"location":"predicate2/#domain-and-range","text":"None \u2192 0..1 PropertyNode","title":"Domain and Range"},{"location":"predicate2/#parents","text":"is_a: predicate","title":"Parents"},{"location":"predicate2/#children","text":"","title":"Children"},{"location":"predicate2/#used-by","text":"PairwiseCommonSubClassAncestor PairwiseCommonAncestor","title":"Used by"},{"location":"prefix/","text":"Class: prefix Maps CURIEs to URIs URI: sparqlfun:Prefix Attributes Own prefix 0..1 Description: A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' Range: Ncname base 0..1 Description: The base URI a prefix will expand to Range: Uri Other properties Mappings: sh:PrefixDeclaration In Subsets: export base table","title":"Class: prefix"},{"location":"prefix/#class-prefix","text":"Maps CURIEs to URIs URI: sparqlfun:Prefix","title":"Class: prefix"},{"location":"prefix/#attributes","text":"","title":"Attributes"},{"location":"prefix/#own","text":"prefix 0..1 Description: A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' Range: Ncname base 0..1 Description: The base URI a prefix will expand to Range: Uri","title":"Own"},{"location":"prefix/#other-properties","text":"Mappings: sh:PrefixDeclaration In Subsets: export base table","title":"Other properties"},{"location":"query_has_subclass_ancestor/","text":"Slot: query_has_subclass_ancestor URI: sparqlfun:query_has_subclass_ancestor Domain and Range None \u2192 0..1 String Parents Children Used by","title":"Slot: query_has_subclass_ancestor"},{"location":"query_has_subclass_ancestor/#slot-query_has_subclass_ancestor","text":"URI: sparqlfun:query_has_subclass_ancestor","title":"Slot: query_has_subclass_ancestor"},{"location":"query_has_subclass_ancestor/#domain-and-range","text":"None \u2192 0..1 String","title":"Domain and Range"},{"location":"query_has_subclass_ancestor/#parents","text":"","title":"Parents"},{"location":"query_has_subclass_ancestor/#children","text":"","title":"Children"},{"location":"query_has_subclass_ancestor/#used-by","text":"","title":"Used by"},{"location":"rdfLevelSummaryStatistic__count_value/","text":"Slot: count_value URI: sparqlfun:rdfLevelSummaryStatistic__count_value Domain and Range None \u2192 0..1 Integer Parents Children Used by CountOfInstantiatedClasses CountOfPredicates CountOfSubclasses RdfLevelSummaryStatistic","title":"Slot: count_value"},{"location":"rdfLevelSummaryStatistic__count_value/#slot-count_value","text":"URI: sparqlfun:rdfLevelSummaryStatistic__count_value","title":"Slot: count_value"},{"location":"rdfLevelSummaryStatistic__count_value/#domain-and-range","text":"None \u2192 0..1 Integer","title":"Domain and Range"},{"location":"rdfLevelSummaryStatistic__count_value/#parents","text":"","title":"Parents"},{"location":"rdfLevelSummaryStatistic__count_value/#children","text":"","title":"Children"},{"location":"rdfLevelSummaryStatistic__count_value/#used-by","text":"CountOfInstantiatedClasses CountOfPredicates CountOfSubclasses RdfLevelSummaryStatistic","title":"Used by"},{"location":"rdfLevelSummaryStatistic__element/","text":"Slot: element URI: sparqlfun:rdfLevelSummaryStatistic__element Domain and Range None \u2192 0..1 Node Parents Children Used by CountOfInstantiatedClasses CountOfPredicates CountOfSubclasses RdfLevelSummaryStatistic","title":"Slot: element"},{"location":"rdfLevelSummaryStatistic__element/#slot-element","text":"URI: sparqlfun:rdfLevelSummaryStatistic__element","title":"Slot: element"},{"location":"rdfLevelSummaryStatistic__element/#domain-and-range","text":"None \u2192 0..1 Node","title":"Domain and Range"},{"location":"rdfLevelSummaryStatistic__element/#parents","text":"","title":"Parents"},{"location":"rdfLevelSummaryStatistic__element/#children","text":"","title":"Children"},{"location":"rdfLevelSummaryStatistic__element/#used-by","text":"CountOfInstantiatedClasses CountOfPredicates CountOfSubclasses RdfLevelSummaryStatistic","title":"Used by"},{"location":"rdf_list_triple_subject/","text":"Slot: subject The rdf:List to which the triple applies URI: sparqlfun:rdf_list_triple_subject Domain and Range RdfListTriple \u2192 0..1 RdfListNode Parents is_a: subject Children Used by RdfFirstTriple RdfListMemberTriple RdfListTriple RdfRestTransitiveTriple RdfRestTriple Other properties Mappings: rdf:subject","title":"Slot: subject"},{"location":"rdf_list_triple_subject/#slot-subject","text":"The rdf:List to which the triple applies URI: sparqlfun:rdf_list_triple_subject","title":"Slot: subject"},{"location":"rdf_list_triple_subject/#domain-and-range","text":"RdfListTriple \u2192 0..1 RdfListNode","title":"Domain and Range"},{"location":"rdf_list_triple_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"rdf_list_triple_subject/#children","text":"","title":"Children"},{"location":"rdf_list_triple_subject/#used-by","text":"RdfFirstTriple RdfListMemberTriple RdfListTriple RdfRestTransitiveTriple RdfRestTriple","title":"Used by"},{"location":"rdf_list_triple_subject/#other-properties","text":"Mappings: rdf:subject","title":"Other properties"},{"location":"rdf_type_triple_object/","text":"Slot: object The entity type URI: sparqlfun:rdf_type_triple_object Domain and Range RdfTypeTriple \u2192 0..1 ClassNode Parents is_a: node to node triple\u279eobject Children Used by RdfTypeTriple Other properties Mappings: rdf:object","title":"Slot: object"},{"location":"rdf_type_triple_object/#slot-object","text":"The entity type URI: sparqlfun:rdf_type_triple_object","title":"Slot: object"},{"location":"rdf_type_triple_object/#domain-and-range","text":"RdfTypeTriple \u2192 0..1 ClassNode","title":"Domain and Range"},{"location":"rdf_type_triple_object/#parents","text":"is_a: node to node triple\u279eobject","title":"Parents"},{"location":"rdf_type_triple_object/#children","text":"","title":"Children"},{"location":"rdf_type_triple_object/#used-by","text":"RdfTypeTriple","title":"Used by"},{"location":"rdf_type_triple_object/#other-properties","text":"Mappings: rdf:object","title":"Other properties"},{"location":"rdfs_label_triple_value/","text":"Slot: value The label value URI: sparqlfun:rdfs_label_triple_value Domain and Range RdfsLabelTriple \u2192 0..1 String Parents is_a: value Children Used by RdfsLabelTriple Other properties Close Mappings: rdf:object","title":"Slot: value"},{"location":"rdfs_label_triple_value/#slot-value","text":"The label value URI: sparqlfun:rdfs_label_triple_value","title":"Slot: value"},{"location":"rdfs_label_triple_value/#domain-and-range","text":"RdfsLabelTriple \u2192 0..1 String","title":"Domain and Range"},{"location":"rdfs_label_triple_value/#parents","text":"is_a: value","title":"Parents"},{"location":"rdfs_label_triple_value/#children","text":"","title":"Children"},{"location":"rdfs_label_triple_value/#used-by","text":"RdfsLabelTriple","title":"Used by"},{"location":"rdfs_label_triple_value/#other-properties","text":"Close Mappings: rdf:object","title":"Other properties"},{"location":"rdfs_subclass_of_triple_object/","text":"Slot: object The superclass element of the triple URI: sparqlfun:rdfs_subclass_of_triple_object Domain and Range RdfsSubclassOfTriple \u2192 0..1 ClassNode Parents is_a: node to node triple\u279eobject Children Used by RdfsSubclassOfNamedTriple RdfsSubclassOfTriple Other properties Mappings: rdf:object","title":"Slot: object"},{"location":"rdfs_subclass_of_triple_object/#slot-object","text":"The superclass element of the triple URI: sparqlfun:rdfs_subclass_of_triple_object","title":"Slot: object"},{"location":"rdfs_subclass_of_triple_object/#domain-and-range","text":"RdfsSubclassOfTriple \u2192 0..1 ClassNode","title":"Domain and Range"},{"location":"rdfs_subclass_of_triple_object/#parents","text":"is_a: node to node triple\u279eobject","title":"Parents"},{"location":"rdfs_subclass_of_triple_object/#children","text":"","title":"Children"},{"location":"rdfs_subclass_of_triple_object/#used-by","text":"RdfsSubclassOfNamedTriple RdfsSubclassOfTriple","title":"Used by"},{"location":"rdfs_subclass_of_triple_object/#other-properties","text":"Mappings: rdf:object","title":"Other properties"},{"location":"rdfs_subclass_of_triple_subject/","text":"Slot: subject The subclass element of the triple URI: sparqlfun:rdfs_subclass_of_triple_subject Domain and Range RdfsSubclassOfTriple \u2192 0..1 ClassNode Parents is_a: subject Children Used by RdfsSubclassOfNamedTriple RdfsSubclassOfTriple Other properties Mappings: rdf:subject","title":"Slot: subject"},{"location":"rdfs_subclass_of_triple_subject/#slot-subject","text":"The subclass element of the triple URI: sparqlfun:rdfs_subclass_of_triple_subject","title":"Slot: subject"},{"location":"rdfs_subclass_of_triple_subject/#domain-and-range","text":"RdfsSubclassOfTriple \u2192 0..1 ClassNode","title":"Domain and Range"},{"location":"rdfs_subclass_of_triple_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"rdfs_subclass_of_triple_subject/#children","text":"","title":"Children"},{"location":"rdfs_subclass_of_triple_subject/#used-by","text":"RdfsSubclassOfNamedTriple RdfsSubclassOfTriple","title":"Used by"},{"location":"rdfs_subclass_of_triple_subject/#other-properties","text":"Mappings: rdf:subject","title":"Other properties"},{"location":"rdfs_subproperty_of_triple_object/","text":"Slot: object The superproperty element of the triple URI: sparqlfun:rdfs_subproperty_of_triple_object Domain and Range RdfsSubpropertyOfTriple \u2192 0..1 PropertyNode Parents is_a: node to node triple\u279eobject Children Used by RdfsSubpropertyOfTriple Other properties Mappings: rdf:object","title":"Slot: object"},{"location":"rdfs_subproperty_of_triple_object/#slot-object","text":"The superproperty element of the triple URI: sparqlfun:rdfs_subproperty_of_triple_object","title":"Slot: object"},{"location":"rdfs_subproperty_of_triple_object/#domain-and-range","text":"RdfsSubpropertyOfTriple \u2192 0..1 PropertyNode","title":"Domain and Range"},{"location":"rdfs_subproperty_of_triple_object/#parents","text":"is_a: node to node triple\u279eobject","title":"Parents"},{"location":"rdfs_subproperty_of_triple_object/#children","text":"","title":"Children"},{"location":"rdfs_subproperty_of_triple_object/#used-by","text":"RdfsSubpropertyOfTriple","title":"Used by"},{"location":"rdfs_subproperty_of_triple_object/#other-properties","text":"Mappings: rdf:object","title":"Other properties"},{"location":"rdfs_subproperty_of_triple_subject/","text":"Slot: subject The subproperty element of the triple URI: sparqlfun:rdfs_subproperty_of_triple_subject Domain and Range RdfsSubpropertyOfTriple \u2192 0..1 PropertyNode Parents is_a: subject Children Used by RdfsSubpropertyOfTriple Other properties Mappings: rdf:subject","title":"Slot: subject"},{"location":"rdfs_subproperty_of_triple_subject/#slot-subject","text":"The subproperty element of the triple URI: sparqlfun:rdfs_subproperty_of_triple_subject","title":"Slot: subject"},{"location":"rdfs_subproperty_of_triple_subject/#domain-and-range","text":"RdfsSubpropertyOfTriple \u2192 0..1 PropertyNode","title":"Domain and Range"},{"location":"rdfs_subproperty_of_triple_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"rdfs_subproperty_of_triple_subject/#children","text":"","title":"Children"},{"location":"rdfs_subproperty_of_triple_subject/#used-by","text":"RdfsSubpropertyOfTriple","title":"Used by"},{"location":"rdfs_subproperty_of_triple_subject/#other-properties","text":"Mappings: rdf:subject","title":"Other properties"},{"location":"relation_graph_quad_graph/","text":"Slot: graph Indicates inference/redundancy status URI: sparqlfun:relation_graph_quad_graph Domain and Range RelationGraphQuad \u2192 0..1 Node Parents is_a: graph Children non redundant quad\u279egraph Used by IsAOrPartOf RelationGraphQuad UbergraphQuad","title":"Slot: graph"},{"location":"relation_graph_quad_graph/#slot-graph","text":"Indicates inference/redundancy status URI: sparqlfun:relation_graph_quad_graph","title":"Slot: graph"},{"location":"relation_graph_quad_graph/#domain-and-range","text":"RelationGraphQuad \u2192 0..1 Node","title":"Domain and Range"},{"location":"relation_graph_quad_graph/#parents","text":"is_a: graph","title":"Parents"},{"location":"relation_graph_quad_graph/#children","text":"non redundant quad\u279egraph","title":"Children"},{"location":"relation_graph_quad_graph/#used-by","text":"IsAOrPartOf RelationGraphQuad UbergraphQuad","title":"Used by"},{"location":"results/","text":"Slot: results URI: sparqlfun:results Domain and Range None \u2192 0..* GenericResult Parents Children Used by ResultSet","title":"Slot: results"},{"location":"results/#slot-results","text":"URI: sparqlfun:results","title":"Slot: results"},{"location":"results/#domain-and-range","text":"None \u2192 0..* GenericResult","title":"Domain and Range"},{"location":"results/#parents","text":"","title":"Parents"},{"location":"results/#children","text":"","title":"Children"},{"location":"results/#used-by","text":"ResultSet","title":"Used by"},{"location":"stanza/","text":"Slot: stanza URI: sparqlfun:stanza Domain and Range None \u2192 0..1 Node Parents Children Used by Other properties See also: https://github.com/ontodev/rdftab.rs#stanzas","title":"Slot: stanza"},{"location":"stanza/#slot-stanza","text":"URI: sparqlfun:stanza","title":"Slot: stanza"},{"location":"stanza/#domain-and-range","text":"None \u2192 0..1 Node","title":"Domain and Range"},{"location":"stanza/#parents","text":"","title":"Parents"},{"location":"stanza/#children","text":"","title":"Children"},{"location":"stanza/#used-by","text":"","title":"Used by"},{"location":"stanza/#other-properties","text":"See also: https://github.com/ontodev/rdftab.rs#stanzas","title":"Other properties"},{"location":"subject/","text":"Slot: subject URI: sparqlfun:subject Domain and Range None \u2192 0..1 Node Parents Children rdfs subclass of triple\u279esubject rdfs subproperty of triple\u279esubject taxon applicable\u279esubject Used by SubClassCountTriple DefinitionTriple InTaxonTriple InferredNeverInTaxon IsAOrPartOf NeverInTaxonTriple NodeToNodeTriple NodeToValueTriple NonRedundantQuad NormalizedInformationContentTriple Quad RdfTypeTriple RdfsDomainTriple RdfsLabelTriple RdfsRangeTriple RelationGraphQuad Triple UbergraphQuad Other properties Mappings: rdf:subject","title":"Slot: subject"},{"location":"subject/#slot-subject","text":"URI: sparqlfun:subject","title":"Slot: subject"},{"location":"subject/#domain-and-range","text":"None \u2192 0..1 Node","title":"Domain and Range"},{"location":"subject/#parents","text":"","title":"Parents"},{"location":"subject/#children","text":"rdfs subclass of triple\u279esubject rdfs subproperty of triple\u279esubject taxon applicable\u279esubject","title":"Children"},{"location":"subject/#used-by","text":"SubClassCountTriple DefinitionTriple InTaxonTriple InferredNeverInTaxon IsAOrPartOf NeverInTaxonTriple NodeToNodeTriple NodeToValueTriple NonRedundantQuad NormalizedInformationContentTriple Quad RdfTypeTriple RdfsDomainTriple RdfsLabelTriple RdfsRangeTriple RelationGraphQuad Triple UbergraphQuad","title":"Used by"},{"location":"subject/#other-properties","text":"Mappings: rdf:subject","title":"Other properties"},{"location":"subject_predicate/","text":"Slot: subject_predicate URI: sparqlfun:subject_predicate Domain and Range None \u2192 0..1 String Parents Children Used by InferredNeverInTaxon","title":"Slot: subject_predicate"},{"location":"subject_predicate/#slot-subject_predicate","text":"URI: sparqlfun:subject_predicate","title":"Slot: subject_predicate"},{"location":"subject_predicate/#domain-and-range","text":"None \u2192 0..1 String","title":"Domain and Range"},{"location":"subject_predicate/#parents","text":"","title":"Parents"},{"location":"subject_predicate/#children","text":"","title":"Children"},{"location":"subject_predicate/#used-by","text":"InferredNeverInTaxon","title":"Used by"},{"location":"taxon_applicable_object/","text":"Slot: object a literal or node representing the object of the triple URI: sparqlfun:taxon_applicable_object Domain and Range TaxonApplicable \u2192 0..1 TaxonClass Parents is_a: object Children Used by TaxonApplicable Other properties Mappings: rdf:object","title":"Slot: object"},{"location":"taxon_applicable_object/#slot-object","text":"a literal or node representing the object of the triple URI: sparqlfun:taxon_applicable_object","title":"Slot: object"},{"location":"taxon_applicable_object/#domain-and-range","text":"TaxonApplicable \u2192 0..1 TaxonClass","title":"Domain and Range"},{"location":"taxon_applicable_object/#parents","text":"is_a: object","title":"Parents"},{"location":"taxon_applicable_object/#children","text":"","title":"Children"},{"location":"taxon_applicable_object/#used-by","text":"TaxonApplicable","title":"Used by"},{"location":"taxon_applicable_object/#other-properties","text":"Mappings: rdf:object","title":"Other properties"},{"location":"taxon_applicable_subject/","text":"Slot: subject URI: sparqlfun:taxon_applicable_subject Domain and Range TaxonApplicable \u2192 0..1 TaxonApplicableClass Parents is_a: subject Children Used by TaxonApplicable Other properties Mappings: rdf:subject","title":"Slot: subject"},{"location":"taxon_applicable_subject/#slot-subject","text":"URI: sparqlfun:taxon_applicable_subject","title":"Slot: subject"},{"location":"taxon_applicable_subject/#domain-and-range","text":"TaxonApplicable \u2192 0..1 TaxonApplicableClass","title":"Domain and Range"},{"location":"taxon_applicable_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"taxon_applicable_subject/#children","text":"","title":"Children"},{"location":"taxon_applicable_subject/#used-by","text":"TaxonApplicable","title":"Used by"},{"location":"taxon_applicable_subject/#other-properties","text":"Mappings: rdf:subject","title":"Other properties"},{"location":"type/","text":"Slot: type URI: sparqlfun:type Domain and Range None \u2192 0..1 Node Parents Children Used by ClassNode OboClass OboClassFiltered PropertyNode TaxonApplicableClass TaxonClass TypedNode","title":"Slot: type"},{"location":"type/#slot-type","text":"URI: sparqlfun:type","title":"Slot: type"},{"location":"type/#domain-and-range","text":"None \u2192 0..1 Node","title":"Domain and Range"},{"location":"type/#parents","text":"","title":"Parents"},{"location":"type/#children","text":"","title":"Children"},{"location":"type/#used-by","text":"ClassNode OboClass OboClassFiltered PropertyNode TaxonApplicableClass TaxonClass TypedNode","title":"Used by"},{"location":"value/","text":"Slot: value Note the range of this slot is always a string. Only used the triple represents a literal assertion URI: sparqlfun:value Domain and Range None \u2192 0..1 LiteralAsStringType Parents Children rdfs label triple\u279evalue Used by Other properties Close Mappings: rdf:object","title":"Slot: value"},{"location":"value/#slot-value","text":"Note the range of this slot is always a string. Only used the triple represents a literal assertion URI: sparqlfun:value","title":"Slot: value"},{"location":"value/#domain-and-range","text":"None \u2192 0..1 LiteralAsStringType","title":"Domain and Range"},{"location":"value/#parents","text":"","title":"Parents"},{"location":"value/#children","text":"rdfs label triple\u279evalue","title":"Children"},{"location":"value/#used-by","text":"","title":"Used by"},{"location":"value/#other-properties","text":"Close Mappings: rdf:object","title":"Other properties"},{"location":"types/Boolean/","text":"Type: boolean A binary (true or false) value URI: linkml:Boolean Root (builtin) type Bool Representation bool","title":"Type: boolean"},{"location":"types/Boolean/#type-boolean","text":"A binary (true or false) value URI: linkml:Boolean Root (builtin) type Bool Representation bool","title":"Type: boolean"},{"location":"types/Date/","text":"Type: date a date (year, month and day) in an idealized calendar URI: linkml:Date Root (builtin) type XSDDate Representation str","title":"Type: date"},{"location":"types/Date/#type-date","text":"a date (year, month and day) in an idealized calendar URI: linkml:Date Root (builtin) type XSDDate Representation str","title":"Type: date"},{"location":"types/Datetime/","text":"Type: datetime The combination of a date and time URI: linkml:Datetime Root (builtin) type XSDDateTime Representation str","title":"Type: datetime"},{"location":"types/Datetime/#type-datetime","text":"The combination of a date and time URI: linkml:Datetime Root (builtin) type XSDDateTime Representation str","title":"Type: datetime"},{"location":"types/Decimal/","text":"Type: decimal A real number with arbitrary precision that conforms to the xsd:decimal specification URI: linkml:Decimal Root (builtin) type Decimal","title":"Type: decimal"},{"location":"types/Decimal/#type-decimal","text":"A real number with arbitrary precision that conforms to the xsd:decimal specification URI: linkml:Decimal Root (builtin) type Decimal","title":"Type: decimal"},{"location":"types/Double/","text":"Type: double A real number that conforms to the xsd:double specification URI: linkml:Double Root (builtin) type float","title":"Type: double"},{"location":"types/Double/#type-double","text":"A real number that conforms to the xsd:double specification URI: linkml:Double Root (builtin) type float","title":"Type: double"},{"location":"types/Float/","text":"Type: float A real number that conforms to the xsd:float specification URI: linkml:Float Root (builtin) type float","title":"Type: float"},{"location":"types/Float/#type-float","text":"A real number that conforms to the xsd:float specification URI: linkml:Float Root (builtin) type float","title":"Type: float"},{"location":"types/Integer/","text":"Type: integer An integer URI: linkml:Integer Root (builtin) type int","title":"Type: integer"},{"location":"types/Integer/#type-integer","text":"An integer URI: linkml:Integer Root (builtin) type int","title":"Type: integer"},{"location":"types/LiteralAsStringType/","text":"Type: literal as string type URI: sparqlfun_rdf:LiteralAsStringType Parent type String Root (builtin) type str","title":"Type: literal as string type"},{"location":"types/LiteralAsStringType/#type-literal-as-string-type","text":"URI: sparqlfun_rdf:LiteralAsStringType Parent type String Root (builtin) type str","title":"Type: literal as string type"},{"location":"types/Ncname/","text":"Type: ncname Prefix part of CURIE URI: linkml:Ncname Root (builtin) type NCName Representation str","title":"Type: ncname"},{"location":"types/Ncname/#type-ncname","text":"Prefix part of CURIE URI: linkml:Ncname Root (builtin) type NCName Representation str","title":"Type: ncname"},{"location":"types/NodeIdType/","text":"Type: node id type IDs are either CURIEs, IRI, or blank nodes. IRIs are wrapped in <>s to distinguish them from CURIEs, but in general it is good practice to populate the [prefixes][Prefixes.md] table such that they are shortened to CURIEs. Blank nodes are ids starting with _: . URI: sparqlfun_rdf:NodeIdType Parent type Uriorcurie Root (builtin) type URIorCURIE Representation str Other properties See also: https://github.com/ontodev/rdftab.rs/issues/18","title":"Type: node id type"},{"location":"types/NodeIdType/#type-node-id-type","text":"IDs are either CURIEs, IRI, or blank nodes. IRIs are wrapped in <>s to distinguish them from CURIEs, but in general it is good practice to populate the [prefixes][Prefixes.md] table such that they are shortened to CURIEs. Blank nodes are ids starting with _: . URI: sparqlfun_rdf:NodeIdType Parent type Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: node id type"},{"location":"types/NodeIdType/#other-properties","text":"See also: https://github.com/ontodev/rdftab.rs/issues/18","title":"Other properties"},{"location":"types/Nodeidentifier/","text":"Type: nodeidentifier A URI, CURIE or BNODE that represents a node in a model. URI: linkml:Nodeidentifier Root (builtin) type NodeIdentifier Representation str","title":"Type: nodeidentifier"},{"location":"types/Nodeidentifier/#type-nodeidentifier","text":"A URI, CURIE or BNODE that represents a node in a model. URI: linkml:Nodeidentifier Root (builtin) type NodeIdentifier Representation str","title":"Type: nodeidentifier"},{"location":"types/Objectidentifier/","text":"Type: objectidentifier A URI or CURIE that represents an object in the model. URI: linkml:Objectidentifier Root (builtin) type ElementIdentifier Representation str Other properties Comments: Used for inheritence and type checking","title":"Type: objectidentifier"},{"location":"types/Objectidentifier/#type-objectidentifier","text":"A URI or CURIE that represents an object in the model. URI: linkml:Objectidentifier Root (builtin) type ElementIdentifier Representation str","title":"Type: objectidentifier"},{"location":"types/Objectidentifier/#other-properties","text":"Comments: Used for inheritence and type checking","title":"Other properties"},{"location":"types/String/","text":"Type: string A character string URI: linkml:String Root (builtin) type str","title":"Type: string"},{"location":"types/String/#type-string","text":"A character string URI: linkml:String Root (builtin) type str","title":"Type: string"},{"location":"types/Time/","text":"Type: time A time object represents a (local) time of day, independent of any particular day URI: linkml:Time Root (builtin) type XSDTime Representation str","title":"Type: time"},{"location":"types/Time/#type-time","text":"A time object represents a (local) time of day, independent of any particular day URI: linkml:Time Root (builtin) type XSDTime Representation str","title":"Type: time"},{"location":"types/Uri/","text":"Type: uri a complete URI URI: linkml:Uri Root (builtin) type URI Representation str","title":"Type: uri"},{"location":"types/Uri/#type-uri","text":"a complete URI URI: linkml:Uri Root (builtin) type URI Representation str","title":"Type: uri"},{"location":"types/Uriorcurie/","text":"Type: uriorcurie a URI or a CURIE URI: linkml:Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: uriorcurie"},{"location":"types/Uriorcurie/#type-uriorcurie","text":"a URI or a CURIE URI: linkml:Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: uriorcurie"}]}